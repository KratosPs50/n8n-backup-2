{
  "createdAt": "2025-08-14T14:16:26.024Z",
  "updatedAt": "2025-08-15T14:43:44.501Z",
  "id": "vsSolT8LyupqD8zK",
  "name": "üè¥‚ò†Ô∏èüï∑Ô∏è Rob√¥ Web Scraper v2.2.1",
  "active": true,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "={{ $node['variaveis_erro'].json[\"Planilha ID\"] }}",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "={{ $node['variaveis_erro'].json[\"Planilha Aba\"] }}",
          "mode": "id"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Execu√ß√£o": "=ERRO",
            "Link": "={{'=HYPERLINK(\"' + $node['variaveis_erro'].json['N8N URL'] + '/workflow/' +$node['Ocorreu Erro'].json.workflow.id + '/executions/' + $node['Ocorreu Erro'].json.execution.id + '\"' + '; \"' + 'VERIFICAR ERRO' +'\")' }}",
            "ID da Execu√ß√£o": "={{ $node['Ocorreu Erro'].json.execution.id }}"
          },
          "matchingColumns": [
            "ID da Execu√ß√£o"
          ],
          "schema": [
            {
              "id": "Data",
              "displayName": "Data",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Hora",
              "displayName": "Hora",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Palavra Chave Foco",
              "displayName": "Palavra Chave Foco",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "T√≠tulo",
              "displayName": "T√≠tulo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "ID da Categoria",
              "displayName": "ID da Categoria",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Categoria",
              "displayName": "Categoria",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "ID das Tags",
              "displayName": "ID das Tags",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Imagem",
              "displayName": "Imagem",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Outlines",
              "displayName": "Outlines",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Link",
              "displayName": "Link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Execu√ß√£o",
              "displayName": "Execu√ß√£o",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "ID da Execu√ß√£o",
              "displayName": "ID da Execu√ß√£o",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Posi√ß√£o",
              "displayName": "Posi√ß√£o",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Concorr√™ncia",
              "displayName": "Concorr√™ncia",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ]
        },
        "options": {
          "cellFormat": "USER_ENTERED"
        }
      },
      "id": "3b0c7aa6-a933-485d-bf10-d04ab9b006fd",
      "name": "Google Sheets - Status ERRO",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        448,
        640
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "z1VWO1EGILqORxWq",
          "name": "Google Sheets account Fortune"
        }
      }
    },
    {
      "parameters": {},
      "id": "7504f2f9-f6e1-402d-a5ea-656bd84d61aa",
      "name": "Ocorreu Erro",
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [
        -128,
        640
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "981d448e-cccf-4098-89db-76a012f27a51",
              "name": "Planilha ID",
              "value": "1GaHpLabOGNBgbXXWjFtUAMTI3BBQk1ZvUTubTP9o7Z4",
              "type": "string"
            },
            {
              "id": "4b9a4bcd-1247-42cd-9acf-499a1365c210",
              "name": "Planilha Aba",
              "value": "347027391",
              "type": "string"
            },
            {
              "id": "eac51f0f-ee11-4c52-aa0f-ff2cb0533956",
              "name": "URL do Site",
              "value": "https://news.fortunegroup.com.br",
              "type": "string"
            },
            {
              "id": "927f3c28-8028-44b8-a6fa-cbd1c6c588fd",
              "name": "Logo marca dagua",
              "value": "https://news.fortunegroup.com.br/wp-content/uploads/2025/01/logotransparente-1.png",
              "type": "string"
            },
            {
              "id": "f61da4d4-692a-457b-935d-16124a95be1e",
              "name": "Marca dagua Overlay",
              "value": "https://news.fortunegroup.com.br/wp-content/uploads/2025/01/logotransparente-1.png",
              "type": "string"
            },
            {
              "id": "d1dd49e2-05a0-4fa1-8b04-119507ac0c1f",
              "name": "Custom Post Type",
              "value": "",
              "type": "string"
            },
            {
              "id": "b9ab412c-e28d-4037-8472-36155455188d",
              "name": "Custom Taxonomia",
              "value": "",
              "type": "string"
            },
            {
              "id": "563cc169-5463-4b8d-93fe-6e63ab791bf9",
              "name": "Midjourney API Key",
              "value": "",
              "type": "string"
            },
            {
              "id": "8679abcc-5909-473c-9665-247fb937fd32",
              "name": "Leonardo AI API Key",
              "value": "",
              "type": "string"
            },
            {
              "id": "e3156ccb-66c1-45c5-a115-23d39649be38",
              "name": "scrapeDo_api",
              "value": "",
              "type": "string"
            },
            {
              "id": "5f255954-c5ea-4923-8c67-5fca8c37c62d",
              "name": "Piwigo banco de imagem URL",
              "value": "",
              "type": "string"
            },
            {
              "id": "7aa20564-a0ea-45a8-966e-fd3deb885a76",
              "name": "Pexels API Key",
              "value": "",
              "type": "string"
            },
            {
              "id": "b0514bdc-67bf-41b7-809d-18fd66a32469",
              "name": "Pixabay Key",
              "value": "",
              "type": "string"
            },
            {
              "id": "b720f920-6639-481b-a482-8b6ac919043e",
              "name": "Unsplash API",
              "value": "",
              "type": "string"
            },
            {
              "id": "27d36f71-34c4-4a49-9650-f77d2ca48797",
              "name": "freepik_api_key",
              "value": "FPSXe451ddb249ed5c477c6e5c8319464da0",
              "type": "string"
            },
            {
              "id": "28c31a27-1fdb-4954-be59-52bb31ed6f23",
              "name": "Hugging Face Token",
              "value": "",
              "type": "string"
            },
            {
              "id": "16b2d240-f32b-4657-85c0-a6db532160b1",
              "name": "firecrawl_api",
              "value": "",
              "type": "string"
            },
            {
              "id": "61edd621-597e-475f-b69c-267a5d5ba4f1",
              "name": "post_curto_palavras",
              "value": 500,
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "id": "d2917669-b814-4bbc-9a8c-1bb21fb3234e",
      "name": "variaveis",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        128,
        448
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ce77a124-9e02-45bf-bf16-05ab5697078e",
              "name": "Planilha ID",
              "value": "1GaHpLabOGNBgbXXWjFtUAMTI3BBQk1ZvUTubTP9o7Z4",
              "type": "string"
            },
            {
              "id": "be3b7a5f-f4aa-4b4f-83a6-7773dfbdafdb",
              "name": "Planilha Aba",
              "value": "347027391",
              "type": "string"
            },
            {
              "id": "1ee5c98e-afdd-4261-a7b5-d24214c2acfa",
              "name": "N8N URL",
              "value": "https://editn.integrasac.com.br",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "3b683d69-060e-4842-92e6-a920a8f6efb2",
      "name": "variaveis_erro",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        128,
        640
      ]
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "={{ $('variaveis').item.json[\"Planilha ID\"] }}",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "={{ $('variaveis').item.json[\"Planilha Aba\"] }}",
          "mode": "id"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "=Execu√ß√£o"
            }
          ]
        },
        "combineFilters": "OR",
        "options": {
          "returnAllMatches": "returnFirstMatch"
        }
      },
      "id": "f2dcd204-9755-47e8-9783-a77335eef4ea",
      "name": "Ler Planilha",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.4,
      "position": [
        384,
        448
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "z1VWO1EGILqORxWq",
          "name": "Google Sheets account Fortune"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $execution.id}}",
        "contextWindowLength": 100
      },
      "id": "5256d945-85d5-4095-b0d7-5c32e5685c7d",
      "name": "Mem√≥ria",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.2,
      "position": [
        3088,
        512
      ]
    },
    {
      "parameters": {
        "operation": "information"
      },
      "id": "c7ae7109-847f-4c62-933a-86b4ea1ab655",
      "name": "Pega informa√ß√µes",
      "type": "n8n-nodes-base.editImage",
      "typeVersion": 1,
      "position": [
        6240,
        608
      ]
    },
    {
      "parameters": {
        "url": "={{ $node['variaveis'].json[\"Marca dagua Overlay\"] ? $node['variaveis'].json[\"Marca dagua Overlay\"] : \"https://upload.wikimedia.org/wikipedia/commons/c/ca/1x1.png\"}}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file",
              "outputPropertyName": "frente"
            }
          }
        }
      },
      "id": "bd8493b6-2cf0-4e38-b667-8abe3de34d53",
      "name": "Imagem Overlay",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        6544,
        816
      ],
      "executeOnce": false,
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "operation": "resize",
        "width": "={{ $json[\"size\"][\"width\"] > 1200 ? 1200 : $json[\"size\"][\"width\"] }}",
        "height": "={{ $json[\"size\"][\"height\"] > 630 ? 630 : $json[\"size\"][\"height\"] }}",
        "resizeOption": "onlyIfLarger",
        "options": {
          "format": "webp"
        }
      },
      "id": "e38fa245-7a1a-48cc-887e-b23e6aa20807",
      "name": "redimensionar",
      "type": "n8n-nodes-base.editImage",
      "typeVersion": 1,
      "position": [
        6432,
        608
      ]
    },
    {
      "parameters": {
        "operation": "information"
      },
      "id": "6d2387c7-66d7-4b58-971f-5c75ea535b44",
      "name": "Pega informa√ß√µes redimensionada",
      "type": "n8n-nodes-base.editImage",
      "typeVersion": 1,
      "position": [
        6624,
        608
      ]
    },
    {
      "parameters": {
        "operation": "multiStep",
        "operations": {
          "operations": [
            {
              "operation": "composite",
              "dataPropertyNameComposite": "=frente"
            },
            {
              "operation": "composite",
              "dataPropertyNameComposite": "logo",
              "positionX": "={{ ($('Pega informa√ß√µes redimensionada').item.json[\"size\"][\"width\"] - 10) - $('Informa√ß√µes logo subtitulo').item.json[\"size\"][\"width\"] }}",
              "positionY": "={{ ($('Pega informa√ß√µes redimensionada').item.json[\"size\"][\"height\"] - 20) - $('Informa√ß√µes logo subtitulo').item.json[\"size\"][\"height\"] }}"
            }
          ]
        },
        "options": {
          "format": "jpeg"
        }
      },
      "id": "82f39a6b-78d5-44b9-bc7a-a4ce4041345f",
      "name": "Aplicar marca dagua",
      "type": "n8n-nodes-base.editImage",
      "typeVersion": 1,
      "position": [
        6752,
        816
      ],
      "notesInFlow": true,
      "notes": "Jpeg ou Webp"
    },
    {
      "parameters": {
        "operation": "information",
        "dataPropertyName": "logo"
      },
      "id": "d6c24d59-22e9-4d48-9913-bc88797f9ece",
      "name": "Informa√ß√µes logo subtitulo",
      "type": "n8n-nodes-base.editImage",
      "typeVersion": 1,
      "position": [
        6352,
        816
      ]
    },
    {
      "parameters": {
        "url": "={{ $node['variaveis'].json[\"Logo marca dagua\"] ? $node['variaveis'].json[\"Logo marca dagua\"] : \"https://upload.wikimedia.org/wikipedia/commons/c/ca/1x1.png\" }} ",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file",
              "outputPropertyName": "logo"
            }
          }
        }
      },
      "id": "dbf7033b-02e3-4b63-8a8b-6340046e2365",
      "name": "logo",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        6832,
        608
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $node['variaveis'].json[\"URL do Site\"] }}/wp-json/wp/v2/media/",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "wordpressApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cache-control",
              "value": "no-cache"
            },
            {
              "name": "content-disposition",
              "value": "=attachment; filename={{ $node['Loop'].json[\"outlines\"]\n.replaceAll(\" \", \"-\")\n.toLowerCase()\n.normalize('NFD')\n.replace(/\\p{Mn}/gu, \"\")\n.replace(/[^\\w\\-]/g, \"\") // Remove todos os caracteres n√£o permitidos\n.slice(0, 100) }}.{{ $binary.data.fileExtension }}"
            }
          ]
        },
        "sendBody": true,
        "contentType": "binaryData",
        "inputDataFieldName": "data",
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "3449afa0-1fab-48ee-8fef-3303de5c5fd8",
      "name": "Wordpress - Salvar imagem em m√≠dia",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        6320,
        1168
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000,
      "credentials": {
        "wordpressApi": {
          "id": "WpmUPc56IE4VL24s",
          "name": "Wordpress account NEWS"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $node['variaveis'].json[\"URL do Site\"] }}/wp-json/wp/v2/media/{{ $node['Wordpress - Salvar imagem em m√≠dia'].json[\"id\"] }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "wordpressApi",
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "alt_text",
              "value": "={{ $node['Loop'].json[\"outlines\"] }}"
            },
            {
              "name": "title",
              "value": "={{ $node['Loop'].json[\"outlines\"] }}"
            },
            {
              "name": "description",
              "value": "={{ $node['Loop'].json[\"outlines\"] }}"
            },
            {
              "name": "caption",
              "value": "={{ \n(() => {\n  const imageBank = $node['dados'].json[\"image_bank\"];\n  const reference = $node['dados'].json[\"reference\"];\n  const link = $node['dados'].json['link'];\n  const language = $node['dados'].json.language;\n  const referring_site = $node['Dados'].json['referring_site'];\n  const outline = $node['Loop'].json[\"outlines\"];\n\n  // Verifica se o banco de imagens √© \"Fonte\"\n  if (imageBank === \"Fonte\" && reference) {\n    // Define a palavra para \"Fonte\" conforme o idioma\n    let sourceText;\n    switch (language) {\n      case 'Portugu√™s BR':\n        sourceText = 'Fonte';\n        break;\n      case 'English (US)':\n        sourceText = 'Source';\n        break;\n      case 'Espanhol':\n        sourceText = 'Fuente';\n        break;\n      case 'French':\n        sourceText = 'Source'; // Em franc√™s, tamb√©m √© \"Source\"\n        break;\n      case 'German':\n        sourceText = 'Quelle';\n        break;\n      default:\n        sourceText = 'Fonte'; // Idioma padr√£o se n√£o corresponder a nenhum dos acima\n    }\n    \n    // Retorna o site de origem como caption da imagem\n    return `${sourceText}: ${referring_site}`;\n  } else {\n    // Se n√£o for banco de imagens \"Fonte\", retorna o t√≠tulo ou subt√≠tulo do arquivo\n    return outline || '';\n  }\n})()\n}}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "6586c38d-84df-472c-8507-320ca9555d94",
      "name": "Wordpress - Atualizar Atributos da imagem",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        6592,
        1168
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000,
      "credentials": {
        "wordpressApi": {
          "id": "WpmUPc56IE4VL24s",
          "name": "Wordpress account NEWS"
        }
      }
    },
    {
      "parameters": {
        "content": "## Otimiza√ß√£o + Marca d'agua + Metadados da imagem",
        "height": 490,
        "width": 842
      },
      "id": "4a9fadea-49fc-49c3-a1d8-296578d7a044",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        6160,
        528
      ]
    },
    {
      "parameters": {
        "content": "## Publica√ß√£o do conte√∫do\nSelecione a **Credencial** do Google Sheets\nSelecione a **Credencial** do Wordpress\n",
        "height": 299,
        "width": 783
      },
      "id": "c357be42-fa70-41c8-864b-4f97bec10dfe",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3488,
        912
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "={{ $node['variaveis'].json[\"Planilha ID\"] }}",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "={{ $node['variaveis'].json[\"Planilha Aba\"] }}",
          "mode": "id"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "T√≠tulo": "={{ $node['Dados'].json[\"title\"] }}",
            "Link": "={{ $node['Wordpress - Publicar Post'].json[\"link\"] }}",
            "Palavra Chave Foco": "={{ $node['Dados'].json[\"keyword\"] }}",
            "Url de Raspagem": "={{ $node['Ler Planilha'].json['Url de Raspagem'] }}",
            "Execu√ß√£o": "CONCLU√çDO"
          },
          "matchingColumns": [
            "Url de Raspagem"
          ],
          "schema": [
            {
              "id": "Web Scraper",
              "displayName": "Web Scraper",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Palavra Chave Foco",
              "displayName": "Palavra Chave Foco",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Idioma",
              "displayName": "Idioma",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "T√≠tulo",
              "displayName": "T√≠tulo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Url de Raspagem",
              "displayName": "Url de Raspagem",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Seletor do conte√∫do",
              "displayName": "Seletor do conte√∫do",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Categoria",
              "displayName": "Categoria",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Tags",
              "displayName": "Tags",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Banco de imagem",
              "displayName": "Banco de imagem",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Imagem",
              "displayName": "Imagem",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Imagens nos Subt√≠tulos?",
              "displayName": "Imagens nos Subt√≠tulos?",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Data",
              "displayName": "Data",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Hora",
              "displayName": "Hora",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Resumo",
              "displayName": "Resumo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Conclus√£o",
              "displayName": "Conclus√£o",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "FAQ",
              "displayName": "FAQ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Link Interno?",
              "displayName": "Link Interno?",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "V√≠deo",
              "displayName": "V√≠deo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Fonte",
              "displayName": "Fonte",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "CTA",
              "displayName": "CTA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "CTA Texto",
              "displayName": "CTA Texto",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "CTA Link",
              "displayName": "CTA Link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Autor ID",
              "displayName": "Autor ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Link",
              "displayName": "Link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Execu√ß√£o",
              "displayName": "Execu√ß√£o",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "ID da Execu√ß√£o",
              "displayName": "ID da Execu√ß√£o",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Termos LSI",
              "displayName": "Termos LSI",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Prompt",
              "displayName": "Prompt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {
          "cellFormat": "USER_ENTERED"
        }
      },
      "id": "b3a4b401-5f13-4c77-a6ff-50c59f277f3a",
      "name": "Google Sheets - Status Publicado",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.3,
      "position": [
        4080,
        1040
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "z1VWO1EGILqORxWq",
          "name": "Google Sheets account Fortune"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $node['variaveis'].json[\"URL do Site\"] }}/wp-json/robo-seo-api-rest/v1/update-meta",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "wordpressApi",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "post_id",
              "value": "={{ $node['Wordpress - Publicar Post'].json[\"id\"] }}"
            },
            {
              "name": "keyword",
              "value": "={{ $node['Dados'].json[\"keyword\"] }}"
            },
            {
              "name": "title",
              "value": "={{ $node['Dados'].json[\"title\"] }}"
            },
            {
              "name": "description",
              "value": "={{ $node['Dados'].json[\"description\"] }}"
            },
            {
              "name": "link_internal",
              "value": "={{ $node['dados'].json[\"post_link_interno\"] == true && $node['Dados'].json[\"keyword\"] }}"
            },
            {
              "name": "faq",
              "value": "={{ $node['Combinar subt√≠tulos'].json[\"faq_schema\"].join('')}}"
            },
            {
              "name": "blog_posting_data.headline",
              "value": "={{ $node['Dados'].json[\"title\"] }}"
            },
            {
              "name": "blog_posting_data.description",
              "value": "={{ $node['Dados'].json[\"description\"] }}"
            },
            {
              "name": "blog_posting_data.keywords",
              "value": "={{ $node['Dados'].json[\"keyword\"] }}"
            },
            {
              "name": "faq_title",
              "value": "={{ \n  $node['Combinar subt√≠tulos'].json[\"faq_schema_title\"]\n    .filter(item => item !== \"\") // Filtra os itens vazios\n    .join('') // Concatena em uma string, que ser√° o t√≠tulo desejado\n}}"
            },
            {
              "name": "article_type",
              "value": "={{ \n$node['variaveis'].json[\"rank_math_article_type\"] ? \n$node['variaveis'].json[\"rank_math_article_type\"] : \n\"BlogPosting\" \n}}"
            }
          ]
        },
        "options": {
          "response": {}
        }
      },
      "id": "152f42b3-4c0e-4b16-a2f8-8e93cc710a62",
      "name": "Plugins de SEO",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        3920,
        1040
      ],
      "credentials": {
        "wordpressApi": {
          "id": "WpmUPc56IE4VL24s",
          "name": "Wordpress account NEWS"
        }
      }
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "outline_content",
              "renameField": true,
              "outputFieldName": "content"
            },
            {
              "fieldToAggregate": "id_imagem",
              "renameField": true,
              "outputFieldName": "imagem_destaque"
            },
            {
              "fieldToAggregate": "faq_schema",
              "renameField": true,
              "outputFieldName": "faq_schema"
            },
            {
              "fieldToAggregate": "faq_schema_title",
              "renameField": true,
              "outputFieldName": "faq_schema_title"
            },
            {
              "fieldToAggregate": "summarization"
            }
          ]
        },
        "options": {
          "mergeLists": true
        }
      },
      "id": "30f873d1-7b5a-4e9e-8ce5-78ce7a5403ef",
      "name": "Combinar subt√≠tulos",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        3520,
        1040
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $node['variaveis'].json[\"URL do Site\"] }}/wp-json/wp/v2/{{ $node['variaveis'].json['Custom Post Type'] == '' ? \"posts\" : $node['variaveis'].json['Custom Post Type'] }}/",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "wordpressApi",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "featured_media",
              "value": "={{ $node['Combinar subt√≠tulos'].json[\"imagem_destaque\"][0] != '' ? $node['Combinar subt√≠tulos'].json[\"imagem_destaque\"][0] : null }}"
            },
            {
              "name": "excerpt",
              "value": "={{ $node['Dados'].json[\"description\"] }}"
            },
            {
              "name": "title",
              "value": "={{ $node['Dados'].json[\"title\"] }}"
            },
            {
              "name": "content",
              "value": "={{ // Summarization\n$node['dados'].json[\"summarization\"] ?\n  $node['Combinar subt√≠tulos'].json[\"summarization\"]\n    .filter(item => item !== \"\") \n    .join('') \n: ''}}{{ // Introduction\n$node[\"dados\"].json.short_post ? '' : $node['Dados'].json[\"introduction\"].replace(/\\n/g, ' ') \n}}{{ // V√≠deo\n$node[\"dados\"].json[\"video_youtube\"] == true && $node[\"Dados\"].json[\"youtube_id\"] ? \n'<br /><iframe width=\"720\" height=\"405\" src=\"https://www.youtube.com/embed/' + $node[\"Dados\"].json[\"youtube_id\"] + '\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>' \n: '' \n}}{{ // Conte√∫do\n$node['Combinar subt√≠tulos'].json[\"content\"].join(' ').trim().replace(/\\n/g, ' ') }}\n{{ \n(() => {\n  const reference = $node['dados'].json[\"reference\"];\n  const link = $node['dados'].json['link'];\n  const language = $node['dados'].json.language;\n  const referring_site = $node['Dados'].json['referring_site'];\n  \n  if (!reference || !link) {\n    return ''; // Retorna vazio se n√£o houver refer√™ncia ou link\n  }\n\n  // Define a palavra para \"Fonte\" conforme o idioma\n  let sourceText;\n  switch (language) {\n    case 'Portugu√™s BR':\n      sourceText = 'Fonte';\n      break;\n    case 'English (US)':\n      sourceText = 'Source';\n      break;\n    case 'Espanhol':\n      sourceText = 'Fuente';\n      break;\n    case 'French':\n      sourceText = 'Source'; // Em franc√™s, tamb√©m √© \"Source\"\n      break;\n    case 'German':\n      sourceText = 'Quelle';\n      break;\n    default:\n      sourceText = 'Fonte'; // Idioma padr√£o se n√£o corresponder a nenhum dos acima\n  }\n\n  // Gera o HTML de refer√™ncia\n  return `<p>${sourceText}: <a href='${link}' target='_blank' title='${link.extractDomain()}' rel='nofollow'>${referring_site}</a></p>`;\n})()\n}}\n{{ $node['dados'].json[\"cta\"] == true ?  \"<center><a href='\" + $node['dados'].json[\"cta_link\"] + \"' target='_blank' class='cta-robo-seo' title='\" + $node['dados'].json[\"cta_text\"] + '\">' + $node['dados'].json[\"cta_text\"] + '</a></center>' : \"\"}}"
            },
            {
              "name": "slug",
              "value": "={{ $node['Dados'].json[\"title\"].replaceAll(\" \",\"-\").toLowerCase().normalize('NFD').replace(/\\p{Mn}/gu, \"\") }}"
            },
            {
              "name": "={{ $node['variaveis'].json[\"Custom Taxonomia\"] == '' ? 'categories' : $node['variaveis'].json[\"Custom Taxonomia\"]}}",
              "value": "={{ $node['Dados'].json[\"category_id\"] }}"
            },
            {
              "name": "status",
              "value": "={{ $node['dados'].json[\"post_status\"] }}"
            },
            {
              "name": "type",
              "value": "={{ $node['variaveis'].json['Custom Post Type'] == '' ? \"posts\" : $node['variaveis'].json['Custom Post Type'] }}"
            },
            {
              "name": "tags",
              "value": "={{ $node['Dados'].json[\"tag_id\"] }}"
            },
            {
              "name": "date",
              "value": "={{ $node['dados'].json[\"post_data_hora\"] }}"
            },
            {
              "name": "author",
              "value": "={{ $node['dados'].json[\"post_autor_id\"] }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "d9c131ac-9064-4c29-8dd2-b94cff871afc",
      "name": "Wordpress - Publicar Post",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        3728,
        1040
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000,
      "credentials": {
        "wordpressApi": {
          "id": "WpmUPc56IE4VL24s",
          "name": "Wordpress account NEWS"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ff4e03db-92a3-443e-a470-c802eedf48e5",
              "name": "outline_title",
              "value": "={{ $node['Loop'].json.outlines }}",
              "type": "string"
            },
            {
              "id": "b50f4e51-f4c0-4dfd-99fd-8e40c2abbe88",
              "name": "outline_content",
              "value": "={{ (() => {\n  const loopKey = $node['Loop'].data.keys()[0];\n  const currentRunIndex = $('Loop').context[\"currentRunIndex\"];\n  const outline = $node['Loop'].json['outlines'];\n  const isShortPost = $node[\"dados\"].json.short_post;\n\n  const extractContent = () => {\n    const content = $node['Extractor'].json.output.content || 'Conte√∫do n√£o dispon√≠vel';\n    \n    // Evita duplica√ß√£o do <h3> igual ao <h2>\n    if (content.includes(`<h3>${outline}</h3>`)) {\n      return content.replace(`<h3>${outline}</h3>`, ''); // Remove o <h3> duplicado\n    }\n    \n    return content;\n    };\n\n  const addImage = () => {\n    const imageOption = $node['dados'].json[\"image_outline\"];\n    const noImageOption = $node['dados'].json[\"image_bank\"] === \"Sem imagem\";\n\n    if (noImageOption) {\n      return ''; // N√£o adiciona imagem se a op√ß√£o for \"Sem imagem\"\n    }\n\n    const imageSourceNode = $node['Wordpress - Salvar imagem em m√≠dia'];\n    if (!imageSourceNode || !imageSourceNode.json['source_url']) {\n      return ''; // Retorna vazio se o node n√£o foi chamado ou n√£o tem imagem\n    }\n\n    const imageSource = imageSourceNode.json['source_url'];\n\n    if (imageOption === \"N√ÉO\") {\n      return ''; // N√£o adiciona imagem\n    } else if (imageOption === \"SIM em Todos\") {\n      return `<img src='${imageSource}' alt='${outline?.h2 || \"Imagem\"}' title='${outline?.h2 || \"Imagem\"}' />`;\n    } else if (imageOption === \"SIM, mas intercalando\" && (currentRunIndex % 2 === 0)) {\n      return `<img src='${imageSource}' alt='${outline?.h2 || \"Imagem\"}' title='${outline?.h2 || \"Imagem\"}' />`;\n    } else if (imageOption.startsWith(\"A cada\")) {\n      const step = parseInt(imageOption.split(' ')[2], 10);\n      if (step && currentRunIndex % step === 0) {\n        return `<img src='${imageSource}' alt='${outline?.h2 || \"Imagem\"}' title='${outline?.h2 || \"Imagem\"}' />`;\n      }\n    }\n\n    return '';\n  };\n\n  if (currentRunIndex === 0) return '';\n\n  // Outlines\n  if (loopKey === \"outlines\") {\n    return isShortPost ? `${addImage()}${extractContent()}` : `<h2>${outline || \"T√≠tulo n√£o dispon√≠vel\"}</h2>${addImage()}${extractContent()}`;\n  }\n\n  // Conclus√£o\n  if (loopKey === \"conclusion\") {\n    return `${extractContent()}`;\n  }\n\n  return '';\n})()\n}}\n{{ \n  $node['Loop'].data.keys()[0] === 'faq' ?\n  `<h2>${$node['Extractor FAQ'].json.output.faq.title}</h2>` + \n  $node['Extractor FAQ'].json.output.faq.items.map((faq) => \n    `<h3>${faq.question}</h3><p>${faq.answer}</p>`\n  ).join('') : ''\n}}",
              "type": "string"
            },
            {
              "id": "654f0dbc-befd-4651-b392-e6359993c245",
              "name": "faq_schema",
              "value": "={{ \n  $node['Loop'].data.keys()[0] === 'faq' ?\n  $node['Extractor FAQ'].json[\"output\"][\"faq\"][\"items\"].map((faq) => \n    ({\n      pergunta: faq.question,\n      resposta: faq.answer\n    })\n  ) : ''\n}}",
              "type": "string"
            },
            {
              "id": "c263994e-269b-43c6-abf3-0034e3078e8c",
              "name": "faq_schema_title",
              "value": "={{ \n  $node['Loop'].data.keys()[0] === 'faq' ?\n  $node['Extractor FAQ'].json[\"output\"][\"faq\"][\"title\"] \n  : ''\n}}",
              "type": "string"
            },
            {
              "id": "c97ed92c-0e7c-4861-a67a-5a74f2da89d4",
              "name": "summarization",
              "value": "={{ \n  $node['Loop'].data.keys()[0] === 'summarization' ?\n  $node['Extractor'].json.output.summarization\n  : ''\n}}",
              "type": "string"
            },
            {
              "id": "662448fd-939c-4302-92f8-2ec82f475493",
              "name": "id_imagem",
              "value": "={{ $('Loop').context[\"currentRunIndex\"] == 0 && $node['dados'].json[\"image_bank\"] != \"Sem imagem\" ? $node['Wordpress - Salvar imagem em m√≠dia'].json[\"id\"] : ''}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "c1ac08dd-9820-4a6c-b4d4-139eabaea6e1",
      "name": "Content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4368,
        720
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "={{ $node['variaveis'].json[\"Planilha ID\"] }}",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "={{ $node['variaveis'].json[\"Planilha Aba\"] }}",
          "mode": "id"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Execu√ß√£o": "INICIOU",
            "ID da Execu√ß√£o": "={{ $execution.id}}",
            "Url de Raspagem": "={{ $node['Ler Planilha'].json['Url de Raspagem'] }}"
          },
          "matchingColumns": [
            "Url de Raspagem"
          ],
          "schema": [
            {
              "id": "Data",
              "displayName": "Data",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Hora",
              "displayName": "Hora",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Palavra Chave Foco",
              "displayName": "Palavra Chave Foco",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "T√≠tulo",
              "displayName": "T√≠tulo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Url de Raspagem",
              "displayName": "Url de Raspagem",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Seletor do conte√∫do",
              "displayName": "Seletor do conte√∫do",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "ID da Categoria",
              "displayName": "ID da Categoria",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Categoria",
              "displayName": "Categoria",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "ID das Tags",
              "displayName": "ID das Tags",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Link",
              "displayName": "Link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Execu√ß√£o",
              "displayName": "Execu√ß√£o",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ID da Execu√ß√£o",
              "displayName": "ID da Execu√ß√£o",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "9d424c14-a64a-4d5f-ba4e-ce300d71c0df",
      "name": "Planilha com Status Executando",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.3,
      "position": [
        560,
        448
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "z1VWO1EGILqORxWq",
          "name": "Google Sheets account Fortune"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "437c9513-e58b-4052-bdad-cd42b9008fc6",
              "name": "post_data_hora",
              "value": "={{$node['validacao'].json[\"Data\"].split('/').reverse().join('-') + \"T\" + ((parseInt($node['validacao'].json[\"Hora\"].split(\":\")[0], 10) + 3) % 24).toString().padStart(2, '0') + \":\" + ($node['validacao'].json[\"Hora\"].split(\":\")[1]).toString().padStart(2, '0') + \":00.000Z\"}}",
              "type": "string"
            },
            {
              "id": "4f7c2d1c-bac2-4e42-81c0-02d29e4007d8",
              "name": "keyword",
              "value": "={{ $node['validacao'].json['Palavra Chave Foco'] }}",
              "type": "string"
            },
            {
              "id": "56d0c2ea-4997-44ab-9842-e8863fdbc8a2",
              "name": "post_title",
              "value": "={{ $node['validacao'].json['T√≠tulo'] }}",
              "type": "string"
            },
            {
              "id": "87b5255a-42a1-4075-a527-2bce12c73e8b",
              "name": "categorias_automaticas",
              "value": "={{ $node['validacao'].json['Categoria'] == 'automatico' }}",
              "type": "boolean"
            },
            {
              "id": "97a399da-d3e1-4532-99c5-0889f84faf20",
              "name": "tags_automaticas",
              "value": "={{ $node['validacao'].json['Tags'] == 'automatico'}}",
              "type": "boolean"
            },
            {
              "id": "0fbeaa53-5268-429c-9f73-f72719f1e39a",
              "name": "post_status",
              "value": "={{ $node['validacao'].json['Status']}}",
              "type": "string"
            },
            {
              "id": "978ae6d4-6574-46f0-92f4-eed89094cfc0",
              "name": "post_link_interno",
              "value": "={{ $node['validacao'].json['Link Interno?'] == true ? true : false  }}",
              "type": "boolean"
            },
            {
              "id": "8d6057c3-3853-4da6-b557-4ea7dcc0ff13",
              "name": "post_autor_id",
              "value": "={{ $('validacao').item.json['Autor ID'] ? $node['validacao'].json[\"Autor ID\"] : NULL}}",
              "type": "string"
            },
            {
              "id": "47d913b0-c6b4-4073-b18c-fdb106414e27",
              "name": "post_video",
              "value": "={{ $node['validacao'].json['V√≠deo'] == true ? true : false}}",
              "type": "boolean"
            },
            {
              "id": "04e5a139-5b9d-4007-befd-e64ad096a02d",
              "name": "faq",
              "value": "={{ $node['validacao'].json[\"FAQ\"] == true }}",
              "type": "boolean"
            },
            {
              "id": "5aefa4ae-e55c-48c9-ad98-43480ac28021",
              "name": "conclusion",
              "value": "={{ $node['validacao'].json[\"Conclus√£o\"] == true }}",
              "type": "boolean"
            },
            {
              "id": "33de81ad-efbc-4da6-b734-0139e0b5798e",
              "name": "cta",
              "value": "={{ $node['validacao'].json[\"CTA\"] == true }}",
              "type": "boolean"
            },
            {
              "id": "4226d9ab-1d04-4632-bc8a-18c3b24e0e66",
              "name": "cta_text",
              "value": "={{ $node['validacao'].json[\"CTA Texto\"] }}",
              "type": "string"
            },
            {
              "id": "bc98d88c-d39c-45e9-a448-1a2b08702dbc",
              "name": "cta_link",
              "value": "={{ $node['validacao'].json[\"CTA Link\"] }}",
              "type": "string"
            },
            {
              "id": "51265dcf-f23a-42f2-b6ab-e0da5be42b00",
              "name": "language",
              "value": "={{ $node['validacao'].json[\"Idioma\"] }}",
              "type": "string"
            },
            {
              "id": "c733a144-d479-4b7e-8e43-ffc4c8f1c507",
              "name": "selector",
              "value": "={{ $node['validacao'].json[\"Seletor do conte√∫do\"] }}",
              "type": "string"
            },
            {
              "id": "ac3b116c-2cfc-4586-999b-7612232adf88",
              "name": "link",
              "value": "={{ $node['validacao'].json[\"Url de Raspagem\"] }}",
              "type": "string"
            },
            {
              "id": "5fa3529e-cd73-4cae-9ea8-fbb067696c0b",
              "name": "image_bank",
              "value": "={{ $node['validacao'].json[\"Banco de imagem\"] }}",
              "type": "string"
            },
            {
              "id": "d23c5ae3-e7ef-4665-a7c5-b2c3094d9fe1",
              "name": "scraper",
              "value": "={{ \n\n// Scraper.do\n$node['validacao'].json[\"Web Scraper\"] == \"Scrape do\" ?\n$node['Scrape.do'].json.data :\n\n// Jina.ai\n$node['validacao'].json[\"Web Scraper\"] == \"Jina AI\" ?\n$node['Scraper Jina.ai'].json[\"data\"].title +\n$node['Scraper Jina.ai'].json[\"data\"].content :\n\n// Firecrawl\n$node['validacao'].json[\"Web Scraper\"] == \"Firecrawl\" ?\n$node['Scrapper Firecrawl'].json[\"data\"].metadata.title +\n$node['Scrapper Firecrawl'].json[\"data\"].markdown\n\n: \"Nenhum Web Scraper selecionado\" \n\n}}",
              "type": "string"
            },
            {
              "id": "2f7b3140-48f7-45ac-b86e-2ba6f2e9281a",
              "name": "outlines_qtd",
              "value": "={{ \n$node['validacao'].json[\"Web Scraper\"] == \"n8n\" ?\n    Math.ceil($node['HTML extract'].json['content_text'].split(' ').filter(word => word.length > 0).length / 350) :\n\n$node['validacao'].json[\"Web Scraper\"] == \"Scrape do\" ?\n    Math.ceil($node['Scrape.do'].json.data.split(' ').filter(word => word.length > 0).length / 350) :\n\n$node['validacao'].json[\"Web Scraper\"] == \"Jina AI\" ?\n    Math.ceil($node['Scraper Jina.ai'].json[\"data\"].content.split(' ').filter(word => word.length > 0).length / 350) :\n\n$node['validacao'].json[\"Web Scraper\"] == \"Firecrawl\" ?\n    Math.ceil($node['Scrapper Firecrawl'].json[\"data\"].markdown.split(' ').filter(word => word.length > 0).length / 350) :\n\n\"Nenhum Web Scraper selecionado\" \n}}",
              "type": "string"
            },
            {
              "id": "46a00c65-c2ef-4ffe-8391-f5396a19925b",
              "name": "reference",
              "value": "={{ $node['validacao'].json[\"Fonte\"] == true }}",
              "type": "boolean"
            },
            {
              "id": "8af88b41-1b04-4018-b508-6f9eac715963",
              "name": "summarization",
              "value": "={{ $node['validacao'].json[\"Resumo\"] == true}}",
              "type": "boolean"
            },
            {
              "id": "41c6dab5-bc99-4040-85a1-3c2c22afed8a",
              "name": "image_outline",
              "value": "={{ $node['validacao'].json[\"Imagens nos Subt√≠tulos?\"] }}",
              "type": "string"
            },
            {
              "id": "a450835e-2ca1-4d7f-9a8f-edc13f9f2c17",
              "name": "video_youtube",
              "value": "={{ $node['validacao'].json[\"V√≠deo\"] == true }}",
              "type": "boolean"
            },
            {
              "id": "68d5c17e-6ae1-460d-9e68-9731207c239b",
              "name": "prompt",
              "value": "={{ $node['validacao'].json[\"Prompt\"] }}",
              "type": "string"
            },
            {
              "id": "36726d0e-a8d3-4927-8ed3-5e761fc9d18d",
              "name": "lsi",
              "value": "={{ $node['validacao'].json[\"Termos LSI\"] }}",
              "type": "string"
            },
            {
              "id": "309368c2-abd3-4461-94d2-461a7d9faab0",
              "name": "imagem",
              "value": "={{ $node['validacao'].json[\"Imagem\"] }}",
              "type": "string"
            },
            {
              "id": "c76f8ca9-75cc-4952-b981-ba573747703d",
              "name": "short_post",
              "value": "={{\n  (() => {\n    // Obt√©m qual motor de web scraping est√° sendo usado\n    const webScraperEngine = $node['validacao'].json[\"Web Scraper\"];\n\n    // Fun√ß√£o para contar palavras no conte√∫do extra√≠do\n    const countWords = (text) => text ? text.removeMarkdown().trim().split(/\\s+/).length : 0;\n\n    // Captura o conte√∫do conforme o motor de scraping utilizado\n    let content = \"\";\n\n    if (webScraperEngine === \"Scrape do\") {\n      content = $node['Scrape.do'].json.data || \"\";\n    } else if (webScraperEngine === \"Jina AI\") {\n      content = $node['Scraper Jina.ai'].json[\"data\"].content || \"\";\n    } else if (webScraperEngine === \"Firecrawl\") {\n      content = $node['Scrapper Firecrawl'].json[\"data\"].markdown || \"\";\n    } else {\n      return false; // Nenhum Web Scraper selecionado, retorna como conte√∫do curto por padr√£o\n    }\n\n    // Verifica se o conte√∫do tem menos de X palavras\n    return countWords(content) < $node['variaveis'].json.post_curto_palavras;\n  })()\n}}",
              "type": "boolean"
            },
            {
              "id": "67f65b81-e4da-4dbe-91a5-65ad61c3576e",
              "name": "post_categoria_id",
              "value": "={{ $node['validacao'].json['Categoria'].toString().replaceAll('.',',') }}",
              "type": "string"
            },
            {
              "id": "0f28311d-706f-43b8-91ae-27eb01dfd0b3",
              "name": "post_tag_id",
              "value": "={{ $node['validacao'].json['Tags'].toString().replaceAll('.',',') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "ef96d558-3877-4625-b87c-92affe8fdf7b",
      "name": "dados",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2160,
        432
      ]
    },
    {
      "parameters": {
        "url": "=https://r.jina.ai/{{ $node[\"validacao\"].json['Url de Raspagem'] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "X-Target-Selector",
              "value": "={{ $node[\"validacao\"].json['Seletor do conte√∫do'] ? $node[\"validacao\"].json['Seletor do conte√∫do'] : \"body\" }}"
            },
            {
              "name": "X-Return-Format",
              "value": "markdown"
            }
          ]
        },
        "options": {}
      },
      "id": "ad116766-0b71-421f-8577-e4460873e1e7",
      "name": "Scraper Jina.ai",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1232,
        448
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "content": "## Web Scrapping\nLembre-se de preencher o campo \n\"**Url de Raspagem**\" na planilha\n",
        "height": 558,
        "width": 458
      },
      "id": "35202d97-06c8-4a2c-8fb6-dfa9ae086450",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        960,
        240
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "82c1a189-9382-41d5-9a9a-b8d205807edd",
                    "leftValue": "={{ $node[\"validacao\"].json['Web Scraper'] }}",
                    "rightValue": "Scrape do",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Scrape.do"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "a0cb32dd-4c6c-4906-9004-e9d39be4892b",
                    "leftValue": "={{ $node[\"validacao\"].json['Web Scraper'] }}",
                    "rightValue": "Jina AI",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Jina AI"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "f8c9396e-51c1-4dad-875f-5403b391c479",
                    "leftValue": "={{ $node[\"validacao\"].json['Web Scraper'] }}",
                    "rightValue": "Firecrawl",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Firecrawl"
            }
          ]
        },
        "options": {}
      },
      "id": "64d5b726-97ea-4f2b-9dc5-49f82da7f8da",
      "name": "Qual Scraper?",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        992,
        448
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": "={{ 3 }}"
            }
          ]
        }
      },
      "id": "2ec6a9cb-a1fc-45e0-9d15-2abf606d66e4",
      "name": "A cada 15 min",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -592,
        400
      ],
      "disabled": true
    },
    {
      "parameters": {
        "url": "={{ $node['validacao'].json['Url de Raspagem']}}",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "super",
              "value": "={{true}}"
            },
            {
              "name": "render",
              "value": "={{ true }}"
            },
            {
              "name": "playWithBrowser",
              "value": "=[\n{ \"Action\": \"WaitSelector\", \"WaitSelector\": \"{{ $node[\"validacao\"].json['Seletor do conte√∫do'] ? $node[\"validacao\"].json['Seletor do conte√∫do'] : \"body\" }}\", \"Timeout\": 3500 },\n{ \"Action\": \"ScrollX\", \"Value\": 5000 },\n{ \"Action\": \"Wait\", \"Timeout\": 4000 }\n]"
            },
            {
              "name": "output",
              "value": "markdown"
            }
          ]
        },
        "options": {
          "allowUnauthorizedCerts": true,
          "proxy": "=http://{{ $node['variaveis'].json[\"scrapeDo_api\"] }}:@proxy.scrape.do:8080"
        }
      },
      "id": "91a6caaf-425e-488a-b18f-e7dc528ef3b5",
      "name": "Scrape.do",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1232,
        288
      ]
    },
    {
      "parameters": {
        "errorMessage": "Imagem n√£o encontrada, servidor fora do ar ou bloqueada para fazer download"
      },
      "id": "72ea8abe-4016-4cb7-9b35-ad35f2bfa188",
      "name": "Erro imagem",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        5984,
        -48
      ]
    },
    {
      "parameters": {
        "url": "={{ $json.urls.regular.replaceAll('1080','1200') }}",
        "options": {}
      },
      "id": "25a32524-240a-41f6-9d63-07d198ceaa56",
      "name": "Unsplash Download",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4912,
        448
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api-inference.huggingface.co/models/black-forest-labs/FLUX.1-dev",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $node['variaveis'].json[\"Hugging Face Token\"] }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "inputs",
              "value": "=Depict: {{ \n// Verifica se o √≠ndice atual do loop √© 0\n$node['Loop'].context.currentRunIndex === 0 ? \n    // Caso seja a imagem em destaque\n    (\n        $node['dados'].json[\"image_bank\"].includes(\"autom√°tico\") ? \n            // Se o banco de imagem for autom√°tico, usa o image_prompt de Dados SEO\n            $node['Dados'].json.image_prompt : \n            // Se n√£o for autom√°tico, pega o valor de imagem no formato do loop\n            (\n                $node['dados'].json[\"imagem\"].split(';')[$('Loop').context.currentRunIndex] ? \n                    $node['dados'].json[\"imagem\"].split(';')[$('Loop').context.currentRunIndex] : \n                    $node['dados'].json[\"imagem\"].split(';')[0]\n            )\n    ) : \n    // Caso seja a imagem do subt√≠tulo\n    (\n        $node['dados'].json[\"image_bank\"].includes(\"autom√°tico\") ? \n            // Se o banco de imagem for autom√°tico, usa o image_prompt do node \"Extrator\"\n            $node['Extractor'].json.output.image_prompt : \n            // Se n√£o for autom√°tico, pega o valor de imagem no formato do loop\n            (\n                $node['dados'].json[\"imagem\"].split(';')[$('Loop').context.currentRunIndex] ? \n                    $node['dados'].json[\"imagem\"].split(';')[$('Loop').context.currentRunIndex] : \n                    $node['dados'].json[\"imagem\"].split(';')[0]\n            )\n    )\n}}\n\nStyle: golden ratio, rule of thirds, cyberpunk, glitch art, octane render, cinematic realism, 8k ::7 --ar 16:9 --s 1000\nCreate a hyper-realistic yet surreal landscape that bends reality, incorporating dreamlike elements and exaggerated proportions. Use vibrant, almost neon colors, and focus on a sense of wonder, play, and fantasy."
            },
            {
              "name": "parameters.width",
              "value": "={{ 1280 }}"
            },
            {
              "name": "parameters.height",
              "value": "={{ 720 }}"
            }
          ]
        },
        "options": {}
      },
      "id": "0ec4f696-3874-4b9c-afee-9736893fab57",
      "name": "Flux",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        4704,
        960
      ],
      "notesInFlow": true,
      "typeVersion": 4.2,
      "onError": "continueErrorOutput",
      "notes": " "
    },
    {
      "parameters": {
        "url": "https://api.pexels.com/v1/search",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "query",
              "value": "={{ $node['dados'].json[\"imagem\"].split(';')[$('Loop').context.currentRunIndex] ? $node['dados'].json[\"imagem\"].split(';')[$('Loop').context.currentRunIndex].toLowerCase().normalize('NFD').replace(/\\p{Mn}/gu, \"\") : $node['dados'].json[\"imagem\"].split(';')[0].toLowerCase().normalize('NFD').replace(/\\p{Mn}/gu, \"\") }}"
            },
            {
              "name": "per_page",
              "value": "1"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "={{ $node['variaveis'].json[\"Pexels API Key\"] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "94215673-59c0-43ad-8ceb-4706333c973f",
      "name": "Pexels",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        4704,
        128
      ]
    },
    {
      "parameters": {
        "url": "https://pixabay.com/api/",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "key",
              "value": "={{ $node['variaveis'].json['Pixabay Key'] }}"
            },
            {
              "name": "q",
              "value": "={{ $node['dados'].json[\"imagem\"].split(';')[$('Loop').context.currentRunIndex] ? $node['dados'].json[\"imagem\"].split(';')[$('Loop').context.currentRunIndex].toLowerCase().normalize('NFD').replace(/\\p{Mn}/gu, \"\") : $node['dados'].json[\"imagem\"].split(';')[0].toLowerCase().normalize('NFD').replace(/\\p{Mn}/gu, \"\") }}"
            },
            {
              "name": "orientation",
              "value": "horizontal"
            },
            {
              "name": "min_width",
              "value": "1000"
            },
            {
              "name": "min_height",
              "value": "600"
            },
            {
              "name": "per_page",
              "value": "=3"
            },
            {
              "name": "lang",
              "value": "pt"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "image_type",
              "value": "photo"
            }
          ]
        },
        "options": {}
      },
      "id": "8f25c8c1-1718-45ea-8a2f-832241d08649",
      "name": "Pixabay",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        4704,
        288
      ]
    },
    {
      "parameters": {
        "url": "=https://api.unsplash.com/photos/random/",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "client_id",
              "value": "={{ $node['variaveis'].json[\"Unsplash API\"] }}"
            },
            {
              "name": "query",
              "value": "={{ $node['dados'].json[\"imagem\"].split(';')[$('Loop').context.currentRunIndex] ? $node['dados'].json[\"imagem\"].split(';')[$('Loop').context.currentRunIndex].toLowerCase().normalize('NFD').replace(/\\p{Mn}/gu, \"\") : $node['dados'].json[\"imagem\"].split(';')[0].toLowerCase().normalize('NFD').replace(/\\p{Mn}/gu, \"\") }}"
            },
            {
              "name": "orientation",
              "value": "landscape"
            }
          ]
        },
        "options": {
          "allowUnauthorizedCerts": true
        }
      },
      "id": "f9b7bfec-9f1d-471d-9155-05117f1e6d17",
      "name": "Unsplash",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        4704,
        448
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "url": "={{ $node['Pixabay'].json[\"hits\"][0][\"largeImageURL\"] }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file"
            }
          }
        }
      },
      "id": "4bafe89d-35d5-4173-ae1e-2473f2d006c1",
      "name": "Pixabay - Download",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        4912,
        288
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "={{ $('Pexels').item.json[\"photos\"][0][\"src\"][\"original\"] }}?auto=compress&cs=tinysrgb&fit=crop&h=630&w=1200",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file"
            }
          }
        }
      },
      "id": "d121d434-0f45-4e28-8c22-83513875a2fd",
      "name": "Pexels - Download",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        4912,
        128
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "={{ $node['Piwigo'].json[\"path\"] }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file"
            }
          }
        }
      },
      "id": "7a54182d-777d-4245-a175-d5cd1f566e3e",
      "name": "Piwigo - Download",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        4912,
        -32
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "url": "={{ $node['variaveis'].json[\"Piwigo banco de imagem URL\"] }}?get_imagens={{ $node['dados'].json[\"imagem\"].split(';')[$('Loop').context.currentRunIndex] ? $node['dados'].json[\"imagem\"].split(';')[$('Loop').context.currentRunIndex].replace('tag:','').replaceAll('piwigo:','') : $node['dados'].json[\"imagem\"].split(';')[0].replace('tag:','').replaceAll('piwigo:','') }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "59ff66ac-bcab-4674-b986-d3f3fa74fa53",
      "name": "Piwigo",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        4704,
        -32
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "url": "={{ \n  (() => {\n    const imagens = $node['dados'].json[\"imagem\"].split(';'); // Divide a string em array\n    const indiceAtual = $('Loop').context.currentRunIndex || 0; // Usa 0 como fallback\n    if (indiceAtual >= 0 && indiceAtual < imagens.length) {\n      return imagens[indiceAtual].toLowerCase().normalize('NFD').replace(/\\p{Mn}/gu, \"\");\n    }\n    return imagens[0].toLowerCase().normalize('NFD').replace(/\\p{Mn}/gu, \"\"); // Fallback\n  })()\n}}",
        "options": {}
      },
      "id": "7be825d7-c97b-4ffb-a194-15fe7bd82311",
      "name": "URL image",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        4704,
        608
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api-inference.huggingface.co/models/black-forest-labs/FLUX.1-schnell",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $node['variaveis'].json[\"Hugging Face Token\"] }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "inputs",
              "value": "=Depict: {{ \n// Verifica se o √≠ndice atual do loop √© 0\n$node['Loop'].context.currentRunIndex === 0 ? \n    // Caso seja a imagem em destaque\n    (\n        $node['dados'].json[\"image_bank\"].includes(\"autom√°tico\") ? \n            // Se o banco de imagem for autom√°tico, usa o image_prompt de Dados SEO\n            $node['Dados'].json.image_prompt : \n            // Se n√£o for autom√°tico, pega o valor de imagem no formato do loop\n            (\n                $node['dados'].json[\"imagem\"].split(';')[$('Loop').context.currentRunIndex] ? \n                    $node['dados'].json[\"imagem\"].split(';')[$('Loop').context.currentRunIndex] : \n                    $node['dados'].json[\"imagem\"].split(';')[0]\n            )\n    ) : \n    // Caso seja a imagem do subt√≠tulo\n    (\n        $node['dados'].json[\"image_bank\"].includes(\"autom√°tico\") ? \n            // Se o banco de imagem for autom√°tico, usa o image_prompt do node \"Extrator\"\n            $node['Extractor'].json.output.image_prompt : \n            // Se n√£o for autom√°tico, pega o valor de imagem no formato do loop\n            (\n                $node['dados'].json[\"imagem\"].split(';')[$('Loop').context.currentRunIndex] ? \n                    $node['dados'].json[\"imagem\"].split(';')[$('Loop').context.currentRunIndex] : \n                    $node['dados'].json[\"imagem\"].split(';')[0]\n            )\n    )\n}}\nStyle: golden ratio, rule of thirds, cyberpunk, glitch art, octane render, cinematic realism, 8k ::7 --ar 16:9 --s 1000\nCreate a hyper-realistic yet surreal landscape that bends reality, incorporating dreamlike elements and exaggerated proportions. Use vibrant, almost neon colors, and focus on a sense of wonder, play, and fantasy."
            },
            {
              "name": "parameters.width",
              "value": "={{ 1280 }}"
            },
            {
              "name": "parameters.height",
              "value": "={{ 720 }}"
            }
          ]
        },
        "options": {}
      },
      "id": "f711e4d3-c9ff-4092-a00d-52a60ee8885e",
      "name": "Flux.1-schnell",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        4912,
        1008
      ],
      "notesInFlow": true,
      "typeVersion": 4.2,
      "retryOnFail": true,
      "maxTries": 2,
      "waitBetweenTries": 5000,
      "onError": "continueErrorOutput",
      "notes": " "
    },
    {
      "parameters": {
        "content": "## Banco de imagem\nSelecione a **Credencial** da OPENAI nos n√≥s Dall-e\n",
        "height": 2595,
        "width": 1530
      },
      "id": "6e7d5672-db2a-45e8-be19-f9e773d4041e",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4608,
        -160
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "2178f488-60a5-4aed-9d8a-454227fa2cc7",
              "leftValue": "={{ $node['Leonardo.AI - Resultados'].json[\"generations_by_pk\"][\"status\"] }}",
              "rightValue": "COMPLETE",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "60b98989-a727-4c8e-9b21-5bbade0d8f7c",
      "name": "imagem j√° foi gerada?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        5328,
        1248
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "f7d3e12b-e419-4c7c-9757-2340398854fb",
                    "leftValue": "={{ $node['dados'].json[\"image_bank\"] }}",
                    "rightValue": "Piwigo",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Piwigo"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "37f3bc2c-eb0e-44ef-a75d-d2998e58a62c",
                    "leftValue": "={{ $node['dados'].json[\"image_bank\"] }}",
                    "rightValue": "Pexels",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Pexels"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "c8eef311-967a-452c-8adc-dcefc22e1d1b",
                    "leftValue": "={{ $node['dados'].json[\"image_bank\"] }}",
                    "rightValue": "Pixabay",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Pixabay"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "adc61235-f6dc-4a1a-9a1d-212d998ad8b3",
                    "leftValue": "={{ $node['dados'].json[\"image_bank\"] }}",
                    "rightValue": "Unsplash",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Unsplash"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "0b302740-8d86-4c99-a7e3-cda692a6fb81",
                    "leftValue": "={{ $node['dados'].json[\"image_bank\"] }}",
                    "rightValue": "URL",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "URL"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "e22ceb13-bb84-432c-9982-2c1165d3f9c0",
                    "leftValue": "={{ $node['dados'].json[\"image_bank\"] }}",
                    "rightValue": "Dall-e",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Dall-e"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "c87efb30-bb2a-4ca9-a5c6-856ec7b3b199",
                    "leftValue": "={{ $node['dados'].json[\"image_bank\"] }}",
                    "rightValue": "Pollinations",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Pollinations"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "911e3314-a3f1-45eb-b1ec-c960e6dd88da",
                    "leftValue": "={{ $node['dados'].json[\"image_bank\"] }}",
                    "rightValue": "Flux",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Flux"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "9c0816e2-d237-411d-aa4f-8143fa2756aa",
                    "leftValue": "={{ $node['dados'].json[\"image_bank\"] }}",
                    "rightValue": "Leonardo.Ai",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Leonardo.Ai"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "33245498-baca-4031-b550-6f5293397b96",
                    "leftValue": "={{ $node['dados'].json[\"image_bank\"] }}",
                    "rightValue": "Midjourney",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Midjourney"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "21b3b7c0-7bc1-48f4-a3e4-2920caf6c920",
                    "leftValue": "={{ $node['dados'].json[\"image_bank\"] }}",
                    "rightValue": "Freepik",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Freepik"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "d5b87574-74c5-42fe-bc48-259667f34dae",
                    "leftValue": "={{ $node['dados'].json[\"image_bank\"] }}-{{ $('Loop').context.currentRunIndex == 0 }}",
                    "rightValue": "Fonte-true",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Fonte"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "a68607d5-e98c-41fe-aa24-7d4206a3faf9",
                    "leftValue": "={{ $node['dados'].json[\"image_bank\"] }}",
                    "rightValue": "Reconhecimento",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Reconhecimento"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "e65211fd-b9e7-45e5-94b6-830f80a647d4",
                    "leftValue": "={{ $node['dados'].json[\"image_bank\"] }}",
                    "rightValue": "Sem imagem",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Sem imagem"
            }
          ]
        },
        "options": {
          "fallbackOutput": "none"
        }
      },
      "id": "97869787-3823-4a39-92a8-cad76fad4e2c",
      "name": "Qual banco de imagem?1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        4384,
        96
      ]
    },
    {
      "parameters": {
        "jsCode": "// Defina os campos obrigat√≥rios conforme suas especifica√ß√µes\nconst requiredFields = [\"Categoria\", \"Status\"];\n\n// Array para armazenar erros\nlet errors = [];\n\n// Verificar se o node \"Ler Planilha\" existe e tem dados\nconst sheetData = $node[\"Ler Planilha\"]?.json;\nif (!sheetData) {\n  errors.push('O node \"Ler Planilha\" n√£o foi encontrado ou n√£o cont√©m dados.');\n}\n\n// **Fun√ß√£o para Extrair IDs das Categorias e Tags**\nfunction extractIds(field) {\n  return field\n    .split(',')\n    .map(item => item.trim())\n    .filter(item => item.toLowerCase() === \"automatico\" || /\\d+/.test(item)) // Aceita n√∫meros ou \"automatico\"\n    .map(item => item.toLowerCase() === \"automatico\" ? \"automatico\" : item.split(' - ')[0]) // Mant√©m \"automatico\"\n    .join(',');\n}\n\n// **Mapeamento do campo \"Status\" da planilha para o formato da API**\nconst statusMap = {\n  \"Agendado\": \"future\",\n  \"Revis√£o pendente\": \"pending\",\n  \"Rascunho\": \"draft\",\n  \"Publicado\": \"publish\",\n  \"Privado\": \"private\"\n};\n\n// Verifica se o status informado na planilha √© v√°lido e converte para o formato da API\nlet status = sheetData[\"Status\"] ? sheetData[\"Status\"].trim() : \"\";\nlet normalizedStatus = statusMap[status];\n\nif (!normalizedStatus) {\n  errors.push(`O valor de \"Status\" fornecido (\"${status}\") √© inv√°lido. Use um dos seguintes: ${Object.keys(statusMap).join(\", \")}`);\n}\n\nconsole.log(`Status original: \"${status}\", Status normalizado para API: \"${normalizedStatus}\"`);\n\n// **Valida√ß√£o para verificar se \"Categoria\" cont√©m um n√∫mero ou \"automatico\"**\nif (!sheetData[\"Categoria\"] || (!sheetData[\"Categoria\"].match(/\\d+/) && sheetData[\"Categoria\"].toLowerCase() !== \"automatico\")) {\n  errors.push('O campo \"Categoria\" deve conter um ID da categoria ou a palavra \"automatico\".');\n}\n\nlet categoryIds = extractIds(sheetData[\"Categoria\"] || \"\");\nlet tagIds = extractIds(sheetData[\"Tags\"] || \"\");\n\nconsole.log(`ID das Categorias Normalizado: ${categoryIds}`);\nconsole.log(`ID das Tags Normalizado: ${tagIds}`);\n\n// Adicionar os dados ao item final\nconst finalData = {\n  ...sheetData,\n  \"Categoria\": categoryIds,\n  \"Tags\": tagIds,\n  \"Status\": normalizedStatus\n};\n\n// Validar campos obrigat√≥rios\nrequiredFields.forEach(field => {\n  if (!finalData[field] || finalData[field].toString().trim() === \"\") {\n    errors.push(`O campo \"${field}\" √© obrigat√≥rio e est√° vazio.`);\n  }\n});\n\n// Se houver erros, registrar e lan√ßar exce√ß√£o com tratamento adequado\nif (errors.length > 0) {\n  const errorMessage = errors.map(e => e.trim()).join(\"\\n\");\n  console.error(\"Erros encontrados:\", errorMessage);\n  throw new Error(errorMessage);\n}\n\n// Se n√£o houver erros, retornar os dados finais\nreturn finalData;"
      },
      "id": "ebf6d7f0-ab4e-4d8c-a5b8-d71bfe235d95",
      "name": "validacao",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        800,
        448
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3e1129e4-2ecd-4ba6-af89-2f1e6e2f12ff",
              "name": "prompt_persona",
              "value": "=Act as an experienced journalist/writer specialized in gathering and curating information from sources to create engaging and informative news and articles. Your goal is to maximize the relevance, accuracy, and SEO optimization of the content, ensuring it resonates with the target audience and aligns with modern editorial practices while maintaining naturalness and fluency in writing, and never plagiarizing the reference content.",
              "type": "string"
            },
            {
              "id": "bdc28097-f674-473c-84ca-dfcae0f1b619",
              "name": "prompt_estilo_de_escrita",
              "value": "=Write as if you were human, maximizing naturalness and fluency, using colloquial, accessible language rich in everyday expressions. Incorporate natural language tics, variations in rhythm, and tone. Use varied punctuation, such as ellipses, dashes, and parentheses, to give an informal and fluid language feel, simulating the flow of human thoughts. Humanized Stories and Examples: Add anecdotes or stories that help emotionally connect with the reader, making the content more engaging and personal. Variety of Style and Reflections: Vary sentence structure, inserting reflective or opinionated sections that convey a human and authentic voice. Avoid uniform writing patterns. Critical Review and Consistency: Review the text to ensure that vocabulary and style are consistent throughout the article, avoiding excessive repetition of words or phrases. Ensure that the content is fluid and natural. Subtle Persuasion: Integrate persuasive techniques, such as reflective questions and comparisons that position the offer as the best choice, subtly leading the reader to the desired action, such as clicking affiliate links. Write in a style that incorporates a human style, contractions, idiomatic expressions, transitional phrases, interjections, modifiers, and colloquialisms, symbolism, irony, foreshadowing, metaphor, personification, hyperbole, alliteration, imagery, onomatopoeia, and similes without directly mentioning them. Use personal pronouns, simplicity, rhetorical questions, analogies, metaphors, brevity, and engagement with the reader. Understand the fundamentals of SEO (Search Engine Optimization): Objective: Improve the visibility and ranking of web pages in organic search engine results. Key Factors: Relevant keywords, quality content, site structure, user experience, among others. Research relevant keywords: Select a few primary keywords and variations to incorporate into the content. Apply SEO best practices in content creation",
              "type": "string"
            },
            {
              "id": "efd0562b-2d4b-4bbe-8d22-14c501cf8651",
              "name": "prompt_dados_seo",
              "value": "=# SEO Data \nWhen \"SEO Data\" is requested, provide the following items for a blog post, based on the provided data analysis by identifying key information to be used in content creation, following the specific rules:\n\n'keyword': Identify the most relevant SEO keyword for the content, with a maximum of 3 words;\n\n'title': Create a title that generates curiosity and encourages clicks in search results; the title should be between 45 and 63 characters, use the keyword prominently at the beginning, when possible use Numbers: Titles with numbers (like lists) tend to attract more clicks, include Action Words: Words that encourage action can increase CTR (Click-Through Rate);\n\n'description': Create a description with up to 20 words, use the keyword prominently at the beginning;\n\n'outlines': Create an array with only {{ $node['dados'].json[\"outlines_qtd\"] ? $node['dados'].json[\"outlines_qtd\"] : \"3\" }} distinct subtitles for the post, try using a keyword outline, avoid creating an introduction or conclusion outline;\n\n'introduction': Create an html introduction introduction to capture the reader's attention, include relevant SEO keywords in the first paragraph, avoid creating titles, consider readability with a score of 70-80 and 7th grade, take into account the created subtitles, Do not use Markdown formatting;\n\n'image_prompt':'Based on the keyword and the post title, create a prompt in English for an AI image generation tool that visually reflects the described elements, uniting all aspects into a cohesive image;\n\n'youtube_id': Check if there is a YouTube link in the content and return only the video ID.\n\nDo not change the attribute names.\nDo not create any intro or prefix in the results.\n\n{{ $node['dados'].json[\"lsi\"] &&  \"LSI: \" + $node['dados'].json[\"lsi\"].replaceAll('\\n',', ') }}\n\n# SEO Data - Example Output:\n{‚Äúkeyword‚Äù: \"intelig√™ncia artificial\", \"title\": \"7 Benef√≠cios da Intelig√™ncia Artificial para Micro Empresas\", \"description\": \"Descubra como a intelig√™ncia artificial pode transformar sua micro empresa com automa√ß√£o, an√°lise de dados e mais.\", \"outlines\": [ \"Automatiza√ß√£o de Processos\", \"An√°lise de Dados e Insights\", \"Melhoria no Atendimento ao Cliente\" ], \"introduction\": \"<p>A <strong>intelig√™ncia artificial para micro empresas</strong> est√° revolucionando a forma como os neg√≥cios operam.</p><p>Com a capacidade de automatizar tarefas, analisar dados e melhorar o atendimento ao cliente, a IA oferece in√∫meras vantagens.</p><p>Neste artigo, vamos explorar como essas tecnologias podem beneficiar sua micro empresa e impulsionar seu crescimento.</p>\" ,\"image_prompt\": \"A modern surveillance system featuring multiple high-definition cameras, data analytics screens, and a secure server, illustrating the challenges of contemporary monitoring.\" , \"youtube_id\": \"FNlVO7ZhuOs\"}\n",
              "type": "string"
            },
            {
              "id": "e768f7d7-5fe2-4aec-9985-b04394315344",
              "name": "prompt_conteudo",
              "value": "=# Content\nGenerate the content of the subtitles for an article, following the specific rules:\n'content': Avoid creating conclusions, avoid creating introductions, consider readability with a score of 70-80 and 7th grade, take a comprehensive approach to the article, create detailed content, use <strong>, <em>, ordered lists, or <h3> when possible, avoid adding a title at the beginning, Incorporate keywords and variations naturally throughout the text, Keep paragraphs short and organize the text into logical sections, if the content has structured data, create an HTML table when it contains reference content, Avoid generating duplicate content, take into account the other subtitles. \n\n# Conteudo - Example Output:\n{'content':'<p>The adoption of Artificial Intelligence (AI) can bring numerous benefits to small businesses, from automating repetitive tasks to personalizing customer service and analyzing data. The implementation of AI should be done gradually, identifying areas that can benefit immediately and conducting pilot projects to assess the efficiency of these solutions.</p><h3>Benefits of AI for Small Businesses</h3><p>AI can help small businesses streamline their operations by automating routine processes such as scheduling, data entry, and customer interactions. This not only saves time but also allows employees to focus on more strategic tasks that drive growth.</p><h3>How to Start Implementing AI</h3><p>Starting with AI can be simplified by assessing the specific needs of your business. Pilot projects can serve as a valuable way to test new tools and evaluate their impact. Choose a manageable project that can deliver measurable results and scale as needed.</p><p>Success stories in different sectors show how AI can be a powerful tool to boost growth and improve operational efficiency. For example, retail businesses have used AI-powered chatbots to enhance customer service, while data analytics tools have enabled precise marketing campaigns.</p><h3>Challenges and Considerations</h3><p>While AI offers many opportunities, it is essential to address challenges such as data privacy and the learning curve associated with adopting new technology. Ensuring that staff receive appropriate training and that data handling is secure are key factors for a successful implementation.</p><p>With AI, small businesses can not only compete on equal footing with larger companies but also innovate and create new opportunities in the market. Therefore, do not overlook the potential of AI to revolutionize your business and unlock new levels of productivity and growth.</p>','image_prompt':'A young man is holding an orange phone with his hand'}",
              "type": "string"
            },
            {
              "id": "a17f2502-bc38-4758-be2d-82c512b600cd",
              "name": "prompt_imagem",
              "value": "=Create the prompt for image generation with artificial intelligence in English, avoid adding text to the image, request a realistic image that illustrates the content that will be developed.",
              "type": "string"
            },
            {
              "id": "9afed0dd-4650-40be-9b83-157ba83f2b50",
              "name": "prompt_conclusao",
              "value": "=# Conclusion\nGenerate the conclusion for the created content, consider readability with a score of 70-80 and 7th grade. Write in {{ $node['dados'].json['language']}}\n\n# Example JSON\n{'conclusion':'<h2>Finally what is the best way to implement AI</h2><p>The adoption of Artificial Intelligence (AI) can bring numerous benefits to small businesses, from automating repetitive tasks to personalizing customer service and analyzing data.</p><p>The implementation of AI should be done gradually, identifying areas that can benefit immediately and conducting pilot projects to assess the efficiency of these solutions.</p><p>Success stories in different sectors show how AI can be a powerful tool to boost growth and improve operational efficiency. With AI, small businesses can not only compete on equal footing with larger companies but also innovate and create new opportunities in the market.</p><p>Therefore, do not overlook the potential of AI to revolutionize your business.</p>'\\n\\n}",
              "type": "string"
            },
            {
              "id": "57eb063f-fb87-471f-8577-ca668267094e",
              "name": "prompt_faq",
              "value": "=# FAQ\nCreate a FAQ with 1 title and 6 items with 'question' and 'answer' related to the created content.\n\n#Example JSON\n{\\n\\n'faq': [\\n\\n{'title_faq':'FAQ - Perguntas frequentes sobre intelig√™ncia artificial em micro empresa'},\\n\\n{'question': 'Como a automa√ß√£o de tarefas pode beneficiar minha micro empresa?', 'answer': 'A automa√ß√£o de tarefas libera sua equipe de atividades repetitivas, aumentando a produtividade e permitindo que se concentrem em tarefas mais estrat√©gicas.'},\\n\\n{'question': 'Quais ferramentas posso usar para an√°lise de dados?', 'answer': 'Existem v√°rias ferramentas dispon√≠veis, como Google Analytics, Tableau e Microsoft Power BI, que ajudam a coletar e interpretar dados valiosos.'},\\n\\n{'question': 'O que s√£o chatbots e como eles melhoram o atendimento ao cliente?', 'answer': 'Chatbots s√£o assistentes virtuais que podem responder perguntas e resolver problemas a qualquer hora do dia, melhorando a experi√™ncia do cliente e liberando sua equipe.'},\\n\\n{'question': 'Como posso personalizar a experi√™ncia do cliente?', 'answer': 'Atrav√©s da an√°lise de dados, voc√™ pode entender melhor as prefer√™ncias dos clientes e oferecer recomenda√ß√µes e promo√ß√µes personalizadas.'},\\n\\n{'question': 'Qual a import√¢ncia do feedback do cliente?', 'answer': 'O feedback √© essencial para identificar √°reas que precisam de melhorias e ajustar sua estrat√©gia de atendimento, garantindo a satisfa√ß√£o do cliente.'},\\n\\n{'question': 'A intelig√™ncia artificial √© acess√≠vel para micro empresas?', 'answer': 'Sim, existem diversas solu√ß√µes de IA acess√≠veis e escal√°veis que podem ser implementadas por micro empresas para melhorar a efici√™ncia e o atendimento.'}\\n\\n]\\n\\n}\" ",
              "type": "string"
            },
            {
              "id": "e05029bf-0087-4b66-83f4-b55437c5c088",
              "name": "prompt_resumo",
              "value": "=# Abstractive Summarization\nDevelop a summarization in JSON for the content based on the previous sections. The summary should emulate Google's featured snippets by providing a clear, concise, and affirmative answer that directly responds to potential user queries.\\nGuidelines for the summarization:\\n1. Use HTML <p class='summarization'><strong> tags to encapsulate the summary.\\n2. Focus on delivering a single paragraph that is highly relevant, affirmative, and valuable to the user's search intent.\\n3. Address the main keyword or query head-on in a direct and authoritative tone.\\n4. Avoid vague or generic responses; the summary should feel like an expert answer.\\n5. Ensure the summary fits within a concise length ideal for Google's search snippet display (approximately 40-60 words). Write in {{ $node['dados'].json['language']}}\n\n# Example JSON\n{'summarization':'<p class=\\\"summarization\\\"><strong>Backlinks are hyperlinks from one website to another, serving as signals of credibility and authority for search engines. They are essential for SEO, helping to improve site visibility and ranking in search results.</strong></p>'}",
              "type": "string"
            },
            {
              "id": "9fd85fde-445e-4aa8-b088-c52323a75d76",
              "name": "prompt_exemplo",
              "value": "=Debugando o sucesso: O que +450 SaaS podem ensinar a devs empreendedores\nE a√≠, galera! Beleza? \nEm uma edi√ß√£o recente, mergulhei de cabe√ßa no relat√≥rio \"State of Independent SaaS\", organizado pela equipe do MicroConf, um dos eventos mais respeitados no mundo das pequenas empresas de software por assinatura. E cara, as descobertas s√£o t√£o boas que eu precisava compartilhar com a comunidade dev. Prepara o caf√© que tem muito o que discutir!\nO poder dos n√∫meros: por que todo dev precisa entender de m√©tricas\nAntes de entrar nos detalhes, preciso fazer um aviso: entender essas m√©tricas mudou completamente minha vis√£o como desenvolvedor. Quando comecei meu SaaS, eu era aquele dev t√≠pico, focado 110% no c√≥digo e nas funcionalidades. Mas rapidinho percebi que entender os n√∫meros do neg√≥cio era t√£o importante quanto dominar as tecnologias mais modernas.\nPor exemplo, o relat√≥rio mostra que a m√©dia de crescimento mensal dos SaaS independentes (os que n√£o receberam investimento externo) √© de cerca de 10%. Esse tipo de informa√ß√£o √© ouro puro quando voc√™ t√° planejando quanto tempo seu dinheiro vai durar ou decidindo se √© hora de fazer aquele esfor√ßo extra de divulga√ß√£o.\n\nCom s√≥cios ou sozinho? O dilema de todo dev empreendedor\nAgora, vamos ao primeiro insight: a quest√£o dos fundadores. Sabe aquela d√∫vida cruel se vale a pena ter s√≥cios ou tocar sozinho? Os dados s√£o reveladores:\n\nFundadores solo: crescimento m√©dio mensal de 8,5%\nDuplas de fundadores: 10,2%\nTrios de fundadores: impressionantes 23,7%\nPois √©, trios de fundadores est√£o crescendo at√© 3x mais r√°pido que fundadores solos. Mas calma l√°! Antes de sair correndo atr√°s de dois parceiros, lembra que nem todo neg√≥cio aguenta dividir o bolo em tr√™s peda√ßos no in√≠cio.\n\nComo dev, isso me fez pensar muito na estrutura do time ideal. Um trio bem montado pode cobrir desenvolvimento, design/experi√™ncia do usu√°rio e neg√≥cios/marketing de forma muito mais eficiente. Mas tamb√©m aumenta a complexidade das decis√µes e pode diluir a vis√£o do produto.\n\nO debate do per√≠odo de testes: pedir ou n√£o pedir (o cart√£o de cr√©dito)?\nOutra descoberta que me deixou de queixo ca√≠do foi sobre a velha discuss√£o de pedir ou n√£o o cart√£o de cr√©dito no per√≠odo de testes. Olha s√≥:\n\nSaaS que pedem cart√£o no teste: crescimento mensal de 14%\nSaaS que n√£o pedem: 7,67%\nSurpreendentemente, quem pede cresce quase 2x mais r√°pido. A teoria √© que isso filtra usu√°rios mais comprometidos desde o in√≠cio. Mas tem uma reviravolta: quem n√£o pede acaba com um LTV (valor total deixado pelo cliente ao longo do tempo) maior a longo prazo.\n\nComo dev, isso impacta diretamente na arquitetura do seu sistema de cadastro e cobran√ßa. Voc√™ precisa estar preparado para lidar com um volume maior de usu√°rios (se n√£o pedir o cart√£o) ou ter um sistema mais robusto de gest√£o de pagamentos (se pedir).\nIsso me fez repensar minha estrat√©gia de conte√∫do. Passei a ver cada post no LinkedIn n√£o s√≥ como networking, mas como uma pe√ßa fundamental do processo de atrair novos clientes.\n\nConclus√£o: de dados a decis√µes\nO que mais me impactou nessa an√°lise foi ver como essas decis√µes aparentemente pequenas de neg√≥cio impactam profundamente o c√≥digo que a gente escreve. Tipo, se voc√™ opta por um modelo com vers√£o gratuita, toda a arquitetura do seu sistema precisa ser pensada pra crescer sem quebrar o banco de dados. Ou como a decis√£o de focar em otimiza√ß√£o para mecanismos de busca vs. an√∫ncios muda completamente a forma como voc√™ estrutura a parte visual do seu produto.\n\nEnfim, galera, tem muito mais coisa nessa an√°lise que fiz. Se voc√™ t√° pensando em criar seu pr√≥prio SaaS ou s√≥ quer entender melhor o neg√≥cio por tr√°s do c√≥digo que voc√™ escreve, d√° uma olhada no texto completo da Jornada SaaS. Prometo que vai te dar uns insights que voc√™ n√£o acha em tutorial de programa√ß√£o nenhum.",
              "type": "string"
            },
            {
              "id": "4cf348a2-1d84-45d1-88d5-b1db05496243",
              "name": "prompt_idioma",
              "value": "=Write in {{ $node['dados'].json['language']}}",
              "type": "string"
            },
            {
              "id": "f34adbd4-db2a-41b6-8434-811e5e6b0bab",
              "name": "prompt_adicional",
              "value": "={{ $node['dados'].json[\"prompt\"] &&  \"Prompt Adicional: \" + $node['dados'].json[\"prompt\"] }}",
              "type": "string"
            },
            {
              "id": "2fff1daa-1cee-4910-b44a-aac389a9fac0",
              "name": "prompt_lsi",
              "value": "={{ $node['dados'].json[\"lsi\"] &&  \"Termos de Lsi: \" + $node['dados'].json[\"lsi\"] }}",
              "type": "string"
            },
            {
              "id": "567b6c4b-366f-4034-be2e-29ee741247f0",
              "name": "prompt_titulo",
              "value": "=- Criar um t√≠tulo informativo e atrativo, mantendo a ess√™ncia do material de refer√™ncia original, sem copiar integralmente.\n- Entre 60 e 80 caracteres (incluindo espa√ßos).\n- Adaptar o t√≠tulo para transmitir um tom relevante e envolvente, sem exageros sensacionalistas.\n- Pode explorar curiosidade, impacto ou benef√≠cio, mas sem distorcer os fatos do conte√∫do de refer√™ncia.\n- Evitar uso excessivo de mai√∫sculas, mantendo a formata√ß√£o natural e profissional.\n- Se necess√°rio, reformular para melhorar a legibilidade e clareza, sem alterar o sentido original.",
              "type": "string"
            },
            {
              "id": "b8b1dc58-4c69-4641-8fc9-8e06c596cae1",
              "name": "prompt_keyword",
              "value": "=- Identificar a palavra-chave principal que melhor representa o tema central da not√≠cia, mantendo-se fiel ao contexto original.\n- A keyword deve ser curta e objetiva (preferencialmente entre 1 e 2 palavras).\n- Escolher um termo com alto potencial de busca e relev√¢ncia para SEO, evitando express√µes gen√©ricas demais.\n- Se poss√≠vel, priorizar palavras-chave j√° utilizadas na not√≠cia original ou sin√¥nimos estrat√©gicos.",
              "type": "string"
            },
            {
              "id": "4ecea749-6960-4244-aa0e-d09996adef4b",
              "name": "prompt_descricao",
              "value": "=- Crie uma descri√ß√£o (meta description) para exibir nos resultados de pesquisa, fornecendo um resumo envolvente e que complemente o t√≠tulo, estimulando o clique.\n- No tamanho de 18 a 22 palavras, com no m√°ximo 156 caracteres (incluindo espa√ßos).\n- Mencionar a keyword principal de forma clara, preferencialmente no in√≠cio.  \n- Tom convincente e conversacional, evitando constru√ß√µes gen√©ricas.  \n- Evitar uso de conectivos repetitivos (‚Äúal√©m disso‚Äù, ‚Äúpor fim‚Äù).",
              "type": "string"
            },
            {
              "id": "2ccedda7-3345-4ab6-af08-4be6bf3887e2",
              "name": "prompt_introducao",
              "value": "=- Gere a introdu√ß√£o em HTML que prenda o leitor e o incentive a continuar lendo, destacando a keyword principal logo no in√≠cio.\n- 1 par√°grafo com no m√°ximo 2-3 linhas.\n- Linguagem acess√≠vel, tom conversacional.\n- Consider readability with a score of 70-80 and 7th grade level.\n- Incluir a keyword principal em **negrito** (`<strong>`) na primeira men√ß√£o.\n- Evitar repeti√ß√µes excessivas.\n- Use exemplos, perguntas ou express√µes que convidem √† leitura.\n- Evite tom 100% afirmativo.\n- Responder em **JSON** com o campo `\"introduction\"`.",
              "type": "string"
            },
            {
              "id": "5aad8ca4-c891-4d64-9dff-1842f5102b3b",
              "name": "prompt_criar_subtitulos",
              "value": "={{\n  (() => {\n    const content = $node[\"dados\"].json.scraper;\n    const isShortPost = $node['dados'].json.short_post;\n\n    // Fun√ß√£o para contar palavras no conte√∫do\n    const countWords = (text) => text ? text.trim().split(/\\s+/).length : 0;\n\n    // Conta o n√∫mero de palavras no conte√∫do\n    const wordCount = countWords(content);\n\n    // Define o n√∫mero m√©dio de palavras por subt√≠tulo\n    const wordsPerSubtitle = 450;\n\n    // Calcula a quantidade de subt√≠tulos (m√≠nimo de 1)\n    const subtitleCount = Math.max(1, Math.round(wordCount / wordsPerSubtitle));\n\n    // Se o post for curto, criar apenas 1 subt√≠tulo\n    if (isShortPost) {\n      return \"- Create an array with only 1 subtitle that covers all reference content.\";\n    } \n\n    // Se for longo, usar o n√∫mero din√¢mico de subt√≠tulos\n    return `- Create an array with ${subtitleCount} distinct subtitles for the post that covers all the reference content.`;\n  })()\n}}",
              "type": "string"
            },
            {
              "id": "f87912cf-fd05-418b-8d8c-99c38005db73",
              "name": "prompt_conteudo_subtitulo",
              "value": "=# Content\nDevelop the Content in JSON for the outline. As an SEO specialist, generate a content object for a blog post subtitle, based on the subtitle following specific rules: \n\n- 'content': Create the content for the subtitle, use only HTML tags in the content. Do not add a <h2> or <h3> title at the beginning. Avoid creating conclusions, avoid creating introductions. **Ensure readability is between 70-80 on the Flesch Reading Ease scale and written at a 6th-7th grade reading level.**, Keep sentences short and simple (average of 12-15 words per sentence). Use conversational, everyday language. Avoid complex structures and difficult words. Make the text engaging, but clear and direct. Use natural contractions and common expressions to make the tone more fluid.  Avoid overly technical terms unless necessary and explain them briefly if used. Apply SEO best practices: Use relevant keywords naturally, without overstuffing. Take a comprehensive approach to the article based on the reference content. Create detailed content, use <strong> or <h3> when necessary. Do not change the attribute name. Do not create any introduction or prefix in the results.",
              "type": "string"
            },
            {
              "id": "1a954cb2-4d0a-4965-bd0b-c125abb29c3c",
              "name": "prompt_categorias",
              "value": "={{ $node[\"dados\"].json.categorias_automaticas ? \n`Identifique a categoria mais relevante para o conte√∫do de refer√™ncia: ${\n  (() => {\n    const categorias = $('Categorias').item.json.categorias;\n\n    // Transforma o array trocando as chaves\n    const transformed = categorias.map(cat => ({\n      category_id: cat.id,\n      category_name: cat.name\n    }));\n\n    // Converte para string JSON\n    return JSON.stringify(transformed);\n  })()\n} - retorne apenas o id da categoria.` \n: \"Retorne apenas null em category_id\" }}",
              "type": "string"
            },
            {
              "id": "1bbdf903-9fe2-4de3-a42a-59eb9b57071b",
              "name": "prompt_tags",
              "value": "={{ $node[\"dados\"].json.tags_automaticas ? \n\"Defina 3 tags relacionadas com o post que ser√° criado.\\n\\nChame na ordem as tools para cada tag:\\n1 - 'search_tag': verifica se a tag existe, passando o nome da tag definida\\n\\n2 - 'create_tag': Caso a tool 'search_tag' retorne erro em alguma consulta, chame essa tool para criar, passando o nome da tag que dever√° ser criada.\\n\\nRetorne sempre apenas os id das tags, separados por v√≠rgula.\" \n: \"null\" }}",
              "type": "string"
            }
          ]
        },
        "options": {
          "dotNotation": true
        }
      },
      "id": "cfabcdd0-8f5c-4604-a91d-89c070ee0a0f",
      "name": "Prompts",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        2464,
        432
      ],
      "notesInFlow": true,
      "notes": "Personaliza√ß√£o dos prompts"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        2752,
        1008
      ],
      "id": "88610a81-e3e2-4661-847e-8a95032012ae",
      "name": "OpenAI",
      "notesInFlow": true,
      "credentials": {
        "openAiApi": {
          "id": "fQUsqGYvG7BKn0Op",
          "name": "OpenAi account FORTUNE POST"
        }
      },
      "notes": "ChatGPT"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=<action>\nForne√ßa os dados abaixo com base no conte√∫do de refer√™ncia fornecido, em um **√∫nico** objeto JSON com as seguintes **chaves** **nesta ordem**:\n1. 'keyword'\n2. \"title\"\n3. \"description\"\n4. \"outlines\"\n5. \"introduction\"\n6. \"image_prompt\"\n7. \"youtube_id\"\n8. \"category_id\"\n9. \"tag_id\"\n10. \"referring_site\"\n\n**Regras de Formata√ß√£o**:  \n- Retorne em formato JSON.  \n- Mantenha as chaves na mesma linha que seus valores.  \n- N√£o crie qualquer prefixo ou sufixo fora do objeto JSON.\n\n**keyword**:\n{{ $node['dados'].json.keyword ? 'retorne: \"' +$node['dados'].json.keyword +'\"' : $('Prompts').item.json.prompt_keyword }};\n\n**title**:\n{{ $node['dados'].json.title ? 'retorne: \"' +$node['dados'].json.title +'\"' : $('Prompts').item.json.prompt_titulo + $('Prompts').item.json.prompt_idioma }};\n\n**description**:\n{{ $('Prompts').item.json.prompt_descricao }},{{ $('Prompts').item.json.prompt_idioma }};\n\n**outlines**:\n{{ $('Prompts').item.json.prompt_criar_subtitulos + $('Prompts').item.json.prompt_idioma }}\n\n**introduction**:\n{{ $('Prompts').item.json.prompt_introducao }},{{ $('Prompts').item.json.prompt_idioma }};\n\n**image_prompt**:\n{{ $('Prompts').item.json.prompt_imagem }};\n\n**youtube_id**:\nCheck if there is a YouTube link in the content and return only the video ID, otherwise return null;\n\n**category_id**: \n{{ $('Prompts').item.json.prompt_categorias }};\n\n**tag_id**: \n{{ $('Prompts').item.json.prompt_tags }};\n\n**referring_site**: \nExtrai apenas o nome do site de refer√™ncia que √©: {{ $('dados').item.json.link.extractDomain() }}, formatado com capitaliza√ß√£o correta.\n</action>\n\n<language>\n{{ $('Prompts').item.json.prompt_idioma }}\n</language>",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=IMPORTANT: Prompt Initialization: Below, I will provide an <action> for you to execute, the <persona> you should represent, and I will explain the <steps> you need to follow to perform the action. I will send you a set of <data> and explain the <context> of the situation. At the end, I will explain the <format> of the output and provide an <example> for you to follow. Write in {{ $('dados').item.json.language }}.\n\n<datetime>\nHoje √© {{ $now.setLocale('pt-BR').format(\"cccc, 'dia' dd 'do m√™s de 'LLLL 'de' yyyy\")}} \n</datetime>\n\n<conteudo-de-referencia>\n{{ $('dados').item.json.scraper.trim().replaceAll('\\n\\n','\\n') }}\n</conteudo-de-referencia>\n\n<persona> \n{{ $('Prompts').item.json.prompt_persona }} \n</persona>  \n\n<writing-style> \n{{ $('Prompts').item.json.prompt_estilo_de_escrita }}\n</writing-style>  \n\n<example_full_post>\n{{ $('Prompts').item.json.prompt_exemplo }}\n</example_full_post>\n\n{{ $('Prompts').item.json.prompt_lsi &&  \"<lsi-terms> \" +\n $('Prompts').item.json.prompt_lsi +\n\" </lsi-terms>\"}}\n\n{{ $('Prompts').item.json.prompt_adicional &&  \"<extra> \" +\n $('Prompts').item.json.prompt_adicional +\n\" </extra>\"}}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        2752,
        432
      ],
      "id": "0a10f230-4cdf-42e6-8f04-f14db7eeb5bc",
      "name": "SEO",
      "retryOnFail": true,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "0082ce66-0436-4a2c-9c43-6856dceeec9d",
              "leftValue": "={{ $node[\"Loop\"].data.keys()[0]}}",
              "rightValue": "faq",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3520,
        656
      ],
      "id": "bf125406-c39d-44d1-8cc6-daa8db4b6eb5",
      "name": "Conte√∫do?"
    },
    {
      "parameters": {
        "text": "={{ $('Conte√∫do').item.json.output.replace(/\\n/g, ' ') }}",
        "attributes": {
          "attributes": [
            {
              "name": "={{ $node[\"Loop\"].data.keys()[0] == \"outlines\" ? 'content' : \n$node[\"Loop\"].data.keys()[0] == \"summarization\" ? 'summarization' :\n$node[\"Loop\"].data.keys()[0] == \"conclusion\" ? 'content' :\n$node[\"Loop\"].data.keys()[0] == \"faq\" ? 'faq' :\n'content'}}",
              "description": "={{ $node[\"Loop\"].data.keys()[0] == \"outlines\" ? 'Extraia o conte√∫do html da sess√£o de da sess√£o do artigo na integra' : \n$node[\"Loop\"].data.keys()[0] == \"summarization\" ? 'Extraia o conte√∫do em html da sess√£o de um artigo na integra' :\n$node[\"Loop\"].data.keys()[0] == \"conclusion\" ? 'Extraia o conte√∫do em html da sess√£o de um artigo na integra' :\n$node[\"Loop\"].data.keys()[0] == \"faq\" ? 'Extraia a faq no formato json' :\n'content'}}"
            },
            {
              "name": "image_prompt",
              "description": "Extraia o prompt da imagem (image_prompt)"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1,
      "position": [
        3760,
        560
      ],
      "id": "707f7b0e-2a14-48a2-9f4e-9db8ab85a784",
      "name": "Extractor"
    },
    {
      "parameters": {
        "text": "={{ $json.output }}",
        "schemaType": "manual",
        "inputSchema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"faq\": {\n      \"type\": \"object\",\n      \"description\": \"Se√ß√£o de FAQ com um t√≠tulo e 6 perguntas e respostas.\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\",\n          \"description\": \"T√≠tulo da se√ß√£o de FAQ.\",\n          \"minLength\": 1\n        },\n        \"items\": {\n          \"type\": \"array\",\n          \"description\": \"Lista de 6 perguntas e respostas.\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"question\": {\n                \"type\": \"string\",\n                \"description\": \"Pergunta da FAQ.\",\n                \"minLength\": 1\n              },\n              \"answer\": {\n                \"type\": \"string\",\n                \"description\": \"Resposta correspondente.\",\n                \"minLength\": 1\n              }\n            },\n            \"required\": [\"question\", \"answer\"]\n          },\n          \"minItems\": 3,\n          \"maxItems\": 6\n        }\n      }\n    }\n  },\n  \"additionalProperties\": false\n}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1,
      "position": [
        3760,
        720
      ],
      "id": "a6fc7c1e-e375-4e50-8669-4733361a5590",
      "name": "Extractor FAQ"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ \n// Outline\n  $node['Loop'].data.keys()[0] == \"outlines\" ? \n    $node['Prompts'].json.prompt_conteudo_subtitulo + \"\\n\\n\" +\n    $node['Prompts'].json.prompt_imagem + \n    \"\\n\\n# Develop the content and image_prompt in JSON for the subtitle '\" + $node['Loop'].json[\"outlines\"] + \"'\"  : \n\n// FAQ\n  $node['Loop'].data.keys()[0] == \"faq\" ? \n    $node['Prompts'].json.prompt_faq :\n\n// Conclusion\n$node['Loop'].data.keys()[0] == \"conclusion\" ? \n  $node['Prompts'].json.prompt_conclusao :\n\n// Summarization\n$node['Loop'].data.keys()[0] == \"summarization\" ? \n  $node['Prompts'].json.prompt_resumo :\n''\n}}\n<language>\n{{ $('Prompts').item.json.prompt_idioma }}\n</language>",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        3184,
        656
      ],
      "id": "ba6253a4-2839-4c93-a181-992994efa465",
      "name": "Conte√∫do"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Loop').context[\"currentRunIndex\"] == 0 &&  $node[\"variaveis\"].json['Banco de imagem'] != \"\"}}",
                    "rightValue": 0,
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Imagem em destaque"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8cf5fefe-d487-4451-8a1c-aba208866d5f",
                    "leftValue": "={{ $('Loop').context[\"currentRunIndex\"] == 0 && $node[\"variaveis\"].json['Banco de imagem']== \"\"}}",
                    "rightValue": "outlines",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Sem imagem"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "dd46bfc7-5d76-400c-a60e-bc18c9aa2f1e",
                    "leftValue": "={{ $('Loop').context[\"currentRunIndex\"]}}",
                    "rightValue": "={{ 0 }}",
                    "operator": {
                      "type": "number",
                      "operation": "gt"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Conte√∫do"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        3952,
        352
      ],
      "id": "3a7d32a3-52f2-4b3e-91df-462853d3f2a1",
      "name": "Qual etapa?"
    },
    {
      "parameters": {
        "model": "qwen-2.5-32b",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "typeVersion": 1,
      "position": [
        3184,
        1008
      ],
      "id": "37bd859f-a21c-4d17-94f4-1bee959f7faf",
      "name": "Groq",
      "disabled": true
    },
    {
      "parameters": {
        "modelName": "models/gemini-1.5-pro-latest",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        3040,
        1008
      ],
      "id": "41cfa19a-8519-4e45-a802-b013e1c1ecff",
      "name": "Google Gemini",
      "credentials": {
        "googlePalmApi": {
          "id": "4nqBieHViUCciNos",
          "name": "Google Gemini(PaLM) Api account JONATHAN"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "typeVersion": 1.2,
      "position": [
        2912,
        1008
      ],
      "id": "0a927daf-49bd-4d65-a353-3beab7bd865d",
      "name": "Anthropic",
      "notesInFlow": true,
      "disabled": true,
      "notes": "Claude"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e24ac621-e2d6-46e7-82e6-846d0f5d27f3",
              "name": "title",
              "value": "={{ $('Ler Planilha').item.json['T√≠tulo'] ? $('Ler Planilha').item.json['T√≠tulo'] : $node['SEO'].json.output.title }}",
              "type": "string"
            },
            {
              "id": "4502c6f0-9081-4b33-b62f-d5d5ac78b14a",
              "name": "description",
              "value": "={{ $node['SEO'].json.output.description }}",
              "type": "string"
            },
            {
              "id": "89c5ceeb-76c4-4b7b-a3f1-e36a9b6e02df",
              "name": "outlines",
              "value": "={{ $node['SEO'].json.output.outlines }}",
              "type": "array"
            },
            {
              "id": "58d1dd67-0841-4736-86fd-6c874b6c6320",
              "name": "introduction",
              "value": "={{ $node['SEO'].json.output.introduction }}",
              "type": "string"
            },
            {
              "id": "ef01145b-f467-4937-8cfd-3ee3f15c4951",
              "name": "keyword",
              "value": "={{ $('Ler Planilha').item.json['Palavra Chave Foco'] ? $('Ler Planilha').item.json['Palavra Chave Foco'] : $node['SEO'].json.output.keyword }}",
              "type": "string"
            },
            {
              "id": "0d2eb58c-bcb0-4be7-9805-f326c5c30aa1",
              "name": "image_prompt",
              "value": "={{ $node['SEO'].json.output.image_prompt }}",
              "type": "string"
            },
            {
              "id": "1adf2872-df93-46c5-8eff-ca898faa2020",
              "name": "youtube_id",
              "value": "={{ $node['SEO'].json.output.youtube_id }}",
              "type": "string"
            },
            {
              "id": "5a6fed54-0e92-4048-83c0-9e98da2617c3",
              "name": "referring_site",
              "value": "={{ $node['SEO'].json.output.referring_site }}",
              "type": "string"
            },
            {
              "id": "2fddca11-8e55-46df-ad1b-ae4802cc651c",
              "name": "category_id",
              "value": "={{ $node['validacao'].json['Categoria'] == 'automatico' ?  $node['SEO'].json.output.category_id.toString().replaceAll('[','').replaceAll(']','').replaceAll(' ','') : $node[\"dados\"].json.post_categoria_id.toString() }}",
              "type": "string"
            },
            {
              "id": "b65de170-89b2-47b5-9454-97ade9a33ee8",
              "name": "tag_id",
              "value": "={{ $node['validacao'].json['Tags'] == 'automatico' ?  $node['SEO'].json.output.tag_id.toString().replaceAll('[','').replaceAll(']','').replaceAll(' ','') : $node[\"dados\"].json.post_tag_id.toString() }}",
              "type": "string"
            }
          ]
        },
        "options": {
          "dotNotation": true
        }
      },
      "id": "bdf43622-986b-4518-811d-831866f08541",
      "name": "Dados",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        3168,
        352
      ]
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"$schema\": \"https://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"keyword\": {\n      \"type\": \"string\",\n      \"description\": \"The main keyword for the content.\"\n    },\n    \"title\": {\n      \"type\": \"string\",\n      \"description\": \"The title of the content.\"\n    },\n    \"description\": {\n      \"type\": \"string\",\n      \"description\": \"A brief description of the content.\"\n    },\n    \"outlines\": {\n      \"type\": \"array\",\n      \"description\": \"A list of subtitles for the content.\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    },\n    \"introduction\": {\n      \"type\": \"string\",\n      \"description\": \"The introductory text for the content.\"\n    },\n    \"image_prompt\": {\n      \"type\": \"string\",\n      \"description\": \"A prompt for generating an image related to the content.\"\n    },\n    \"youtube_id\": {\n      \"type\": [\"string\", \"number\", \"null\"],\n      \"description\": \"The ID of the associated YouTube video, extracted from the content if available.\"\n    },\n    \"category_id\": {\n      \"type\": [\"string\", \"number\", \"null\"],\n      \"description\": \"The ID of the category the content belongs to.\"\n    },\n    \"tag_id\": {\n      \"type\": [\"string\", \"number\", \"null\"],\n      \"description\": \"The ID of the tag associated with the content.\"\n    },\n    \"referring_site\": {\n      \"type\": \"string\",\n      \"description\": \"The name of the referring site, extracted from the provided link and formatted correctly.\"\n    }\n  },\n  \"required\": [\n    \"keyword\",\n    \"title\",\n    \"description\",\n    \"outlines\",\n    \"introduction\",\n    \"image_prompt\",\n    \"category_id\",\n    \"tag_id\",\n    \"referring_site\"\n  ],\n  \"additionalProperties\": false\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        2960,
        752
      ],
      "id": "68a3eb15-a70a-473a-8fc8-40c0d3da8e72",
      "name": "SEO Json"
    },
    {
      "parameters": {
        "content": "## Agente de IA\nSelecione a **Credencial** do Agente",
        "height": 534,
        "width": 1429
      },
      "id": "b683ee1e-62ec-4747-af7d-289cd462a340",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2688,
        336
      ]
    },
    {
      "parameters": {
        "batchSize": 1,
        "options": {
          "reset": false
        }
      },
      "id": "c2fdad2e-1e9d-4a2b-9941-ccdfe0e58538",
      "name": "Loop",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 2,
      "position": [
        3520,
        352
      ]
    },
    {
      "parameters": {
        "jsCode": "// Extraindo os dados do node \"Dados SEO\"\nconst outlines = $node[\"Dados\"].json['outlines'];\nconst title = $node[\"Dados\"].json['title'];\noutlines.unshift(title);\n\n// Verificando as condi√ß√µes do node \"Dados\"\nconst faq = $node[\"dados\"].json['faq'];\nconst conclusion = $node[\"dados\"].json['conclusion'];\nconst summarization = $node[\"dados\"].json['summarization']; \n\n// Criando uma array de objetos com a estrutura esperada pelo n8n\nconst result = outlines.map(outline => ({ json: { outlines: outline } }));\n\n// Adicionando o item de conclus√£o se a condi√ß√£o for verdadeira\nif (conclusion) {\n    result.push({ json: { conclusion: 'Conclusion' } });\n}\n\n// Adicionando o item de FAQ se a condi√ß√£o for verdadeira\nif (faq) {\n    result.push({ json: { faq: 'FAQ' } });\n}\n\n// Adicionando o item de summarization se a condi√ß√£o for verdadeira\nif (summarization) {\n    result.push({ json: { summarization: 'Summarization' } });\n}\n\nreturn result;"
      },
      "id": "76ee081c-078a-4df7-b36f-95a3b3c9e06c",
      "name": "Separar Dados",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3344,
        352
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "f957393b-6523-4fe0-b411-6b797ed631da",
                    "leftValue": "={{ $node['Loop'].data.keys()[0] }}",
                    "rightValue": "faq",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "FAQ"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "11652c61-916b-45b5-ae91-fd9ae59c5c13",
                    "leftValue": "={{ $node['Loop'].data.keys()[0] }}",
                    "rightValue": "summarization",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Resumo"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "a2b1a9d7-13ab-48cd-a998-8de3a954614f",
                    "leftValue": "={{ $node['Loop'].data.keys()[0] }}",
                    "rightValue": "conclusion",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Conclus√£o"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "eeaa0415-e5ef-4a0d-bd6f-346f5aa54341",
                    "leftValue": "={{ $node['dados'].json['image_bank']}}",
                    "rightValue": "Sem imagem",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Sem imagem"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $node['validacao'].json['Imagens nos Subt√≠tulos?'] }}-{{ $('Loop').context[\"currentRunIndex\"] % 2 === 1 }}",
                    "rightValue": "SIM em Todos",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "SIM em Todos"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "37f3bc2c-eb0e-44ef-a75d-d2998e58a62c",
                    "leftValue": "={{ $node['validacao'].json['Imagens nos Subt√≠tulos?'] }}-{{$('Loop').context[\"currentRunIndex\"] % 2 === 1 }}",
                    "rightValue": "SIM, mas intercalando-true",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Intercalando N√£o"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "f7d3e12b-e419-4c7c-9757-2340398854fb",
                    "leftValue": "={{ $node['validacao'].json['Imagens nos Subt√≠tulos?'] }}-{{ $('Loop').context[\"currentRunIndex\"] % 2 === 1 }}",
                    "rightValue": "SIM, mas intercalando-false",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Intercalando Sim"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "5665fae6-3da8-4aa5-ab2c-1c6addd42ed6",
                    "leftValue": "={{ $node['validacao'].json['Imagens nos Subt√≠tulos?'] }}-{{ $('Loop').context[\"currentRunIndex\"] % 2 === 1 }}",
                    "rightValue": "N√ÉO",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "N√ÉO"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "f43b12d6-2bf5-43f0-9b47-b83db99f7294",
                    "leftValue": "={{ \n   $node['validacao'].json['Imagens nos Subt√≠tulos?'].startsWith('A cada') && \n   $('Loop').context['currentRunIndex'] % parseInt($node['validacao'].json['Imagens nos Subt√≠tulos?'].split(' ')[2]) === 0 \n}}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "A cada X subt√≠tulos"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "52ec25d8-fda9-4f06-9679-479487791052",
      "name": "Imagem no subt√≠tulo?",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        4144,
        400
      ]
    },
    {
      "parameters": {
        "url": "=https://image.pollinations.ai/prompt/{{ \n// Verifica se o √≠ndice atual do loop √© 0\n$node['Loop'].context.currentRunIndex === 0 ? \n    // Caso seja a imagem em destaque\n    (\n        $node['dados'].json[\"image_bank\"].includes(\"autom√°tico\") ? \n            // Se o banco de imagem for autom√°tico, usa o image_prompt de Dados SEO\n            $node['Dados'].json.image_prompt.urlEncode().replace(/\\.$/, \"\") : \n            // Se n√£o for autom√°tico, pega o valor de imagem no formato do loop\n            (\n                $node['dados'].json[\"imagem\"].split(';')[$('Loop').context.currentRunIndex] ? \n                    $node['dados'].json[\"imagem\"].split(';')[$('Loop').context.currentRunIndex].urlEncode().replace(/\\.$/, \"\") : \n                    $node['dados'].json[\"imagem\"].split(';')[0].urlEncode().replace(/\\.$/, \"\")\n            )\n    ) : \n    // Caso seja a imagem do subt√≠tulo\n    (\n        $node['dados'].json[\"image_bank\"].includes(\"autom√°tico\") ? \n            // Se o banco de imagem for autom√°tico, usa o image_prompt do node \"Extrator\"\n            $node['Extractor'].json.output.image_prompt.urlEncode().replace(/\\.$/, \"\") : \n            // Se n√£o for autom√°tico, pega o valor de imagem no formato do loop\n            (\n                $node['dados'].json[\"imagem\"].split(';')[$('Loop').context.currentRunIndex] ? \n                    $node['dados'].json[\"imagem\"].split(';')[$('Loop').context.currentRunIndex].urlEncode().replace(/\\.$/, \"\") : \n                    $node['dados'].json[\"imagem\"].split(';')[0].urlEncode().replace(/\\.$/, \"\")\n            )\n    )\n}}?width=1280&height=720&nologo=true&model=flux&enhance=true",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file"
            }
          }
        }
      },
      "id": "2081be31-f7ec-4bcd-aea0-1e376c07915e",
      "name": "Pollinations",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4704,
        1120
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://cloud.leonardo.ai/api/rest/v1/generations",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            },
            {
              "name": "authorization",
              "value": "=Bearer {{ $node['variaveis'].json[\"Leonardo AI API Key\"] }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "height",
              "value": "={{768}}"
            },
            {
              "name": "prompt",
              "value": "={{ \n// Verifica se o √≠ndice atual do loop √© 0\n$node['Loop'].context.currentRunIndex === 0 ? \n    // Caso seja a imagem em destaque\n    (\n        $node['dados'].json[\"image_bank\"].includes(\"autom√°tico\") ? \n            // Se o banco de imagem for autom√°tico, usa o image_prompt de Dados SEO\n            $node['Dados'].json.image_prompt : \n            // Se n√£o for autom√°tico, pega o valor de imagem no formato do loop\n            (\n                $node['dados'].json[\"imagem\"].split(';')[$('Loop').context.currentRunIndex] ? \n                    $node['dados'].json[\"imagem\"].split(';')[$('Loop').context.currentRunIndex] : \n                    $node['dados'].json[\"imagem\"].split(';')[0]\n            )\n    ) : \n    // Caso seja a imagem do subt√≠tulo\n    (\n        $node['dados'].json[\"image_bank\"].includes(\"autom√°tico\") ? \n            // Se o banco de imagem for autom√°tico, usa o image_prompt do node \"Extrator\"\n            $node['Extractor'].json.output.image_prompt : \n            // Se n√£o for autom√°tico, pega o valor de imagem no formato do loop\n            (\n                $node['dados'].json[\"imagem\"].split(';')[$('Loop').context.currentRunIndex] ? \n                    $node['dados'].json[\"imagem\"].split(';')[$('Loop').context.currentRunIndex] : \n                    $node['dados'].json[\"imagem\"].split(';')[0]\n            )\n    )\n}}"
            },
            {
              "name": "width",
              "value": "={{1360}}"
            },
            {
              "name": "num_images",
              "value": "={{1}}"
            },
            {
              "name": "modelId",
              "value": "aa77f04e-3eec-4034-9c07-d0f619684628"
            },
            {
              "name": "alchemy",
              "value": "={{ true }}"
            },
            {
              "name": "presetStyle",
              "value": "CINEMATIC"
            }
          ]
        },
        "options": {}
      },
      "id": "d4f3b04f-4113-4193-a50d-9e24e5109b48",
      "name": "Leonard - Solicitar imagem",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        4704,
        1248
      ]
    },
    {
      "parameters": {
        "amount": 40,
        "unit": "seconds"
      },
      "id": "2a92a156-b9e0-4aa6-9f45-1aeb2c9e4c50",
      "name": "Aguardar Leonardo.AI",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [
        4912,
        1248
      ],
      "webhookId": "e16b7605-0706-4748-a526-cb4d3c068086"
    },
    {
      "parameters": {
        "url": "=https://cloud.leonardo.ai/api/rest/v1/generations/{{ $json.sdGenerationJob.generationId }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            },
            {
              "name": "authorization",
              "value": "=Bearer {{ $node['variaveis'].json[\"Leonardo AI API Key\"] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "eace14bf-b25e-47bf-8ee9-96508e8e2a27",
      "name": "Leonardo.AI - Resultados",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        5104,
        1248
      ]
    },
    {
      "parameters": {
        "url": "={{ $json.generations_by_pk.generated_images[0].url }}",
        "options": {}
      },
      "id": "9b5a003d-f094-41a1-a20c-2665494d26c7",
      "name": "Leonardo.AI - Baixar imagem",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        5520,
        1248
      ]
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data[0].base64",
        "options": {
          "mimeType": "image/webp"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        4912,
        1936
      ],
      "id": "1f31afba-9f47-402b-af07-2cb6f74798f5",
      "name": "Base64 para Jpeg"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.freepik.com/v1/ai/text-to-image",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-freepik-api-key",
              "value": "={{ $node[\"variaveis\"].json[\"freepik_api_key\"] }}"
            }
          ]
        },
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "prompt",
              "value": "={{ \n// Verifica se o √≠ndice atual do loop √© 0\n$node['Loop'].context.currentRunIndex === 0 ? \n    // Caso seja a imagem em destaque\n    (\n        $node['dados'].json[\"image_bank\"].includes(\"autom√°tico\") ? \n            // Se o banco de imagem for autom√°tico, usa o image_prompt de Dados SEO\n            $node['Dados'].json.image_prompt : \n            // Se n√£o for autom√°tico, pega o valor de imagem no formato do loop\n            (\n                $node['dados'].json[\"imagem\"].split(';')[$('Loop').context.currentRunIndex] ? \n                    $node['dados'].json[\"imagem\"].split(';')[$('Loop').context.currentRunIndex] : \n                    $node['dados'].json[\"imagem\"].split(';')[0]\n            )\n    ) : \n    // Caso seja a imagem do subt√≠tulo\n    (\n        $node['dados'].json[\"image_bank\"].includes(\"autom√°tico\") ? \n            // Se o banco de imagem for autom√°tico, usa o image_prompt do node \"Extrator\"\n            $node['Extractor'].json.output.image_prompt : \n            // Se n√£o for autom√°tico, pega o valor de imagem no formato do loop\n            (\n                $node['dados'].json[\"imagem\"].split(';')[$('Loop').context.currentRunIndex] ? \n                    $node['dados'].json[\"imagem\"].split(';')[$('Loop').context.currentRunIndex] : \n                    $node['dados'].json[\"imagem\"].split(';')[0]\n            )\n    )\n}}"
            },
            {
              "name": "num_images",
              "value": "={{ 1 }}"
            },
            {
              "name": "image.size",
              "value": "widescreen_16_9"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4704,
        1936
      ],
      "id": "8934be08-fc88-472f-9a82-fe8dd29c9318",
      "name": "Freepik"
    },
    {
      "parameters": {
        "content": "![LOGO](https://maiconramos.com/wp-content/uploads/2024/10/avatar-asl.webp)",
        "height": 299.51753054424125,
        "width": 287.5943472009539,
        "color": 7
      },
      "id": "e6f92e28-505f-4019-9b4f-e741dd34079d",
      "name": "Sticky Note14",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        112,
        -256
      ]
    },
    {
      "parameters": {
        "content": "## Rob√¥ SEO: News\n#### Aviso de Uso e Direitos Autorais  \nEsta automa√ß√£o (registro n¬∫ 934292728) √© licenciada para uso pessoal e para presta√ß√£o de servi√ßos a clientes.  \n\n**üìå Permiss√µes e Restri√ß√µes:**\n- **Permitido:** Usar a automa√ß√£o como parte de um servi√ßo de automa√ß√£o ou consultoria para clientes.  \n- **Proibido:** Vender, redistribuir ou compartilhar o arquivo da automa√ß√£o.  \n- **Proibido:** Publicar ou revender a automa√ß√£o como se fosse sua cria√ß√£o, gratuita ou paga.  \n\n\n**‚öñÔ∏è Aten√ß√£o:**\nO uso indevido ser√° tratado como viola√ß√£o de direitos autorais, sujeito a a√ß√µes legais e indeniza√ß√µes.  \n\n¬© 2025 Automa√ß√£o sem Limites | Todos os direitos reservados.\n",
        "height": 469.6694881479302,
        "width": 406.3915849784425,
        "color": 7
      },
      "id": "201a7a62-1f09-4cc1-be48-ebc2fe062e85",
      "name": "Sticky Note15",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        400,
        -256
      ]
    },
    {
      "parameters": {
        "content": "- **Instagram**: [@maiconramosx](https://www.instagram.com/maiconramosx/)\n- **Youtube**: [@maiconramos](https://www.youtube.com/@maiconramos)\n- **Site**: [Automa√ß√£o sem Limites](https://automacaosemlimites.com.br/)\n\n**Precisa de Suporte? assista a aula de suporte com os links e detalhes**",
        "height": 151.70513211006778,
        "width": 288.0067964741826,
        "color": 7
      },
      "id": "3e10bb99-94bd-4e49-af8c-18c69a495e7d",
      "name": "Sticky Note16",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        112,
        80
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 520,
        "width": 740,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        80,
        -272
      ],
      "typeVersion": 1,
      "id": "7e3a58e1-34a6-49ca-803a-5f22346b20f9",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "content": "Configure o **Timezone** nos 3 pontinhos ao lado do save antes de ativar",
        "height": 220.4568364843337,
        "width": 184.478415473571,
        "color": 4
      },
      "id": "0684088f-3ff9-40db-93bc-05708e5d02bf",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -624,
        320
      ]
    },
    {
      "parameters": {
        "content": "## ALTERE AQUI\n",
        "height": 543,
        "width": 179,
        "color": 4
      },
      "id": "e94ce517-74eb-40fd-9089-c2036fc0a14f",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        80,
        320
      ]
    },
    {
      "parameters": {
        "content": "## Google Sheets\nSelecione apenas a **Credencial** do Google Sheets\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n‚ùå [**Erros Comuns do Google Sheets**](https://trello.com/c/V7wmteYt/11-planilha-do-google-com-erro)",
        "height": 547.4601398832745,
        "width": 424.9063344970598
      },
      "id": "61126eb5-c749-4d24-947e-1c5e91bc1300",
      "name": "Sticky Note19",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        320,
        320
      ]
    },
    {
      "parameters": {
        "content": "## Wordpress\nSelecione as credenciais do Wordpress\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n‚ùå [**Erros Comuns do Wordpress**](https://trello.com/c/vhORuZah/9-credencial-do-wordpress)",
        "height": 353,
        "width": 649
      },
      "id": "f6e124ef-d180-4a4e-8d96-8963c6219ce2",
      "name": "Sticky Note31",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        6192,
        1072
      ]
    },
    {
      "parameters": {
        "content": "### Personaliza√ß√£o de Prompt",
        "height": 263,
        "width": 279,
        "color": 4
      },
      "id": "c67575dc-ebde-435c-ab2b-979079967b0c",
      "name": "Sticky Note9",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2384,
        336
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.firecrawl.dev/v1/scrape",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('variaveis').item.json.firecrawl_api }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "url",
              "value": "={{ $node[\"validacao\"].json['Url de Raspagem'] }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1232,
        608
      ],
      "id": "c1b37325-301c-4939-a349-ec6feeb3088e",
      "name": "Scrapper Firecrawl"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "=Generate a detailed prompt describing the content of this image.",
        "imageUrls": "={{ $json.image }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        5792,
        2016
      ],
      "id": "61e0a5a5-c9f9-44e7-a4be-79bedea9d75f",
      "name": "Reconhece imagem e faz prompt",
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "maxTries": 4,
      "credentials": {
        "openAiApi": {
          "id": "fQUsqGYvG7BKn0Op",
          "name": "OpenAi account FORTUNE POST"
        }
      }
    },
    {
      "parameters": {
        "text": "={{ $('Scraper Jina.ai Reconhecimento/Fonte').item.json.data.html }}",
        "attributes": {
          "attributes": [
            {
              "name": "image",
              "description": "A url da imagem Og:image ou imagem em destaque do post",
              "required": true
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1,
      "position": [
        5248,
        2256
      ],
      "id": "d2cef82f-2fa4-4a36-9568-7d9d272448b4",
      "name": "Extrair imagem com ia"
    },
    {
      "parameters": {
        "url": "={{ $json.image || $json.output.image }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5792,
        2256
      ],
      "id": "103ef5b4-f1f2-41c4-a0f0-ac868ca81f4f",
      "name": "Download imagem em destaque"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $node['dados'].json[\"image_bank\"] }}",
                    "rightValue": "Reconhecimento",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "434a352a-6ca3-4412-b843-c9dbfd779eac"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "080049ca-8e97-40b1-af64-386f12d27258",
                    "leftValue": "={{ $node['dados'].json[\"image_bank\"] }}",
                    "rightValue": "Fonte",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        5568,
        2112
      ],
      "id": "e90e7885-b8b4-4687-bdfb-ad55ca434395",
      "name": "Reconhecimento ou fonte?"
    },
    {
      "parameters": {
        "url": "=https://r.jina.ai/{{ $node[\"validacao\"].json['Url de Raspagem'] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "X-Return-Format",
              "value": "html"
            }
          ]
        },
        "options": {}
      },
      "id": "0c543d55-6624-4a5b-9ff2-ec89c6823b85",
      "name": "Scraper Jina.ai Reconhecimento/Fonte",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4704,
        2128
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "operation": "extractHtmlContent",
        "dataPropertyName": "data.html",
        "extractionValues": {
          "values": [
            {
              "key": "image",
              "cssSelector": "meta[property=\"og:image\"]",
              "returnValue": "attribute",
              "attribute": "content"
            }
          ]
        },
        "options": {}
      },
      "id": "aec00394-db53-4065-bb3d-84cf85dd9ffd",
      "name": "HTML Reconhecimento/Fonte",
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        4912,
        2128
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "da73c368-f8c0-440e-a113-519d767f56bb",
              "leftValue": "={{ $json.image }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5088,
        2128
      ],
      "id": "8a8d0511-2abd-4cf1-b370-7d48c62046e6",
      "name": "Tem imagem em destaque?"
    },
    {
      "parameters": {
        "url": "=https://image.pollinations.ai/prompt/{{ $json.content.urlEncode().replace(/\\.$/, \"\") }}?width=1280&height=720&nologo=true&model=flux&enhance=true",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file"
            }
          }
        }
      },
      "id": "58658ed8-82e8-45a2-a178-09f034dae842",
      "name": "Pollinations Reconhecimento",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5968,
        2016
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "resource": "image",
        "prompt": "={{ \n// Verifica se o √≠ndice atual do loop √© 0\n$node['Loop'].context.currentRunIndex === 0 ? \n    // Caso seja a imagem em destaque\n    (\n        $node['dados'].json[\"image_bank\"].includes(\"autom√°tico\") ? \n            // Se o banco de imagem for autom√°tico, usa o image_prompt de Dados SEO\n            $node['Dados'].json.image_prompt : \n            // Se n√£o for autom√°tico, pega o valor de imagem no formato do loop\n            (\n                $node['dados'].json[\"imagem\"].split(';')[$('Loop').context.currentRunIndex] ? \n                    $node['dados'].json[\"imagem\"].split(';')[$('Loop').context.currentRunIndex] : \n                    $node['dados'].json[\"imagem\"].split(';')[0]\n            )\n    ) : \n    // Caso seja a imagem do subt√≠tulo\n    (\n        $node['dados'].json[\"image_bank\"].includes(\"autom√°tico\") ? \n            // Se o banco de imagem for autom√°tico, usa o image_prompt do node \"Extrator\"\n            $node['Extractor'].json.output.image_prompt : \n            // Se n√£o for autom√°tico, pega o valor de imagem no formato do loop\n            (\n                $node['dados'].json[\"imagem\"].split(';')[$('Loop').context.currentRunIndex] ? \n                    $node['dados'].json[\"imagem\"].split(';')[$('Loop').context.currentRunIndex] : \n                    $node['dados'].json[\"imagem\"].split(';')[0]\n            )\n    )\n}}",
        "model": "dall-e-3",
        "options": {
          "n": 1,
          "size": "1792x1024"
        },
        "requestOptions": {}
      },
      "id": "957c5fc6-5703-4649-afa6-ef899c04c1ca",
      "name": "Dall-e",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1,
      "position": [
        4704,
        768
      ],
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "maxTries": 5,
      "credentials": {
        "openAiApi": {
          "id": "fQUsqGYvG7BKn0Op",
          "name": "OpenAi account FORTUNE POST"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatDeepSeek",
      "typeVersion": 1,
      "position": [
        3328,
        1008
      ],
      "id": "23f1b653-de1c-42ce-b359-e2e98556dc9d",
      "name": "DeepSeek",
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "3cde394d-27b4-4a38-b623-b4263aae35d3",
              "leftValue": "={{ $json.data.status }}",
              "rightValue": "=completed",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d9bc7c2f-6d7d-474d-adea-d9b223a61c5c",
      "name": "imagem_gerada?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        5248,
        1472
      ]
    },
    {
      "parameters": {
        "url": "=https://api.goapi.ai/api/v1/task/{{ $json.data.task_id }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-API-KEY",
              "value": "={{ $node['variaveis'].json[\"Midjourney API Key\"] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "8baefb36-941c-440a-9136-9dee8da58b93",
      "name": "midjourney_imagem",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        5072,
        1472
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "amount": 30,
        "unit": "seconds"
      },
      "id": "2acba2b0-5dd4-492f-ab4e-fee9240c6ca2",
      "name": "aguarde_geracao1",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [
        4880,
        1472
      ],
      "webhookId": "d658e2d8-c782-406e-a4b2-44631c77cd9b"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.goapi.ai/api/v1/task",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-API-KEY",
              "value": "={{ $node['variaveis'].json[\"Midjourney API Key\"] }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "input.origin_task_id",
              "value": "={{ $node['Midjourney gerar prompt'].json.data.task_id }}"
            },
            {
              "name": "input.index",
              "value": "1"
            },
            {
              "name": "model",
              "value": "midjourney"
            },
            {
              "name": "task_type",
              "value": "upscale"
            }
          ]
        },
        "options": {}
      },
      "id": "5b1b3df4-d6a6-4ae4-b75e-1fbfe7b43be9",
      "name": "midjourney_upscale",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        4704,
        1680
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "=https://api.goapi.ai/api/v1/task/{{ $node ['midjourney_upscale'].json.data.task_id }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-API-KEY",
              "value": "={{ $node['variaveis'].json[\"Midjourney API Key\"] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "145f1553-2dd4-45f6-93a8-3b3f52b21070",
      "name": "midjourney_resultados",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        5072,
        1680
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "amount": 30,
        "unit": "seconds"
      },
      "id": "5470ddb9-2310-45a5-9c3a-31e9aa59ccbb",
      "name": "aguarde_upscale1",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [
        4880,
        1680
      ],
      "webhookId": "c45c4151-12a7-4a7d-a958-aa74f34c70ed"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "3cde394d-27b4-4a38-b623-b4263aae35d3",
              "leftValue": "={{ $node[\"midjourney_resultados\"].json[\"data\"][\"status\"] }}",
              "rightValue": "completed",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "6e2b78ba-8c06-486c-82f8-36267eaa99fe",
      "name": "resultado_finalizado?1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        5248,
        1680
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.goapi.ai/api/v1/task",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-API-KEY",
              "value": "={{ $node['variaveis'].json[\"Midjourney API Key\"] }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "input.prompt",
              "value": "={{ \n// Verifica se o √≠ndice atual do loop √© 0\n$node['Loop'].context.currentRunIndex === 0 ? \n    // Caso seja a imagem em destaque\n    (\n        $node['dados'].json[\"image_bank\"].includes(\"autom√°tico\") ? \n            // Se o banco de imagem for autom√°tico, usa o image_prompt de Dados SEO\n            $node['Dados'].json.image_prompt : \n            // Se n√£o for autom√°tico, pega o valor de imagem no formato do loop\n            (\n                $node['dados'].json[\"imagem\"].split(';')[$('Loop').context.currentRunIndex] ? \n                    $node['dados'].json[\"imagem\"].split(';')[$('Loop').context.currentRunIndex] : \n                    $node['dados'].json[\"imagem\"].split(';')[0]\n            )\n    ) : \n    // Caso seja a imagem do subt√≠tulo\n    (\n        $node['dados'].json[\"image_bank\"].includes(\"autom√°tico\") ? \n            // Se o banco de imagem for autom√°tico, usa o image_prompt do node \"Extrator\"\n            $node['Extractor'].json.output.image_prompt : \n            // Se n√£o for autom√°tico, pega o valor de imagem no formato do loop\n            (\n                $node['dados'].json[\"imagem\"].split(';')[$('Loop').context.currentRunIndex] ? \n                    $node['dados'].json[\"imagem\"].split(';')[$('Loop').context.currentRunIndex] : \n                    $node['dados'].json[\"imagem\"].split(';')[0]\n            )\n    )\n}}"
            },
            {
              "name": "input.process_mode",
              "value": "fast"
            },
            {
              "name": "input.aspect_ratio",
              "value": "16:9"
            },
            {
              "name": "input.skip_prompt_check",
              "value": "={{true}}"
            },
            {
              "name": "model",
              "value": "midjourney"
            },
            {
              "name": "task_type",
              "value": "imagine"
            }
          ]
        },
        "options": {}
      },
      "id": "38739bd4-0d5d-4eea-a6b0-92efa19c2f53",
      "name": "Midjourney gerar prompt",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        4704,
        1472
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "url": "={{ $node ['midjourney_resultados'].json.data.output.image_url }}",
        "options": {}
      },
      "id": "b54d9c82-e901-45f2-af4f-68e69b7b06ac",
      "name": "Midjourney baixar imagem",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        5424,
        1680
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "content": "## IAS",
        "height": 254,
        "width": 769,
        "color": 4
      },
      "id": "03d2e976-1792-4a7c-973b-ab9b21da7c47",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2688,
        912
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserAutofixing",
      "typeVersion": 1,
      "position": [
        2800,
        656
      ],
      "id": "5c8bcb34-263a-4a5a-8307-7767b4ecbe42",
      "name": "Auto-fixing Output Parser"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "categorias",
        "include": "specifiedFields",
        "fieldsToInclude": "id, name",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1904,
        432
      ],
      "id": "d41000f0-ec5f-4b16-9291-db03fa073271",
      "name": "Categorias"
    },
    {
      "parameters": {
        "content": "## Categorias e Tags",
        "height": 247,
        "width": 485
      },
      "id": "a4aa8792-98a4-4eed-adbb-a9f872995f0d",
      "name": "Sticky Note17",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1600,
        352
      ]
    },
    {
      "parameters": {
        "url": "={{ $node['variaveis'].json[\"URL do Site\"] }}/wp-json/wp/v2/categories",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "wordpressApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "per_page",
              "value": "100"
            }
          ]
        },
        "options": {
          "pagination": {
            "pagination": {
              "parameters": {
                "parameters": [
                  {
                    "name": "page",
                    "value": "={{ $pageCount + 1 }}"
                  }
                ]
              },
              "limitPagesFetched": true,
              "requestInterval": 500
            }
          }
        }
      },
      "id": "14ee5563-179c-4223-98e7-70375ed48440",
      "name": "Wordpress - Categorias",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1680,
        432
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000,
      "alwaysOutputData": true,
      "credentials": {
        "wordpressApi": {
          "id": "WpmUPc56IE4VL24s",
          "name": "Wordpress account NEWS"
        }
      }
    },
    {
      "parameters": {
        "content": "## [Planilha](https://docs.google.com/spreadsheets/d/1jyrG5cDSbrdVmR5Jj1Y0NcIHClyTRHewC13q68fZCL4/copy)\n\n\n## Observa√ß√£o\n**Vai criar conte√∫do muito grande?** Verifique os modelos de IA, alguns tem limites token maiores que outros.\n\nAlguns modelos n√£o aceitam json schema corretamente\n\nPara limites de token por minuto aumente o intervalo\n\n\nüí° [**Sugest√µes**](https://discord.com/channels/982293798803607602/1181750754902552597)\n\nü™≤ [**Suporte ou bugs**](https://discord.com/channels/982293798803607602/1179571731187372064)",
        "height": 360,
        "width": 400,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        848,
        -272
      ],
      "typeVersion": 1,
      "id": "dcdb4c31-e18d-4334-ba1f-35bc2771acaa",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "amount": 25,
        "unit": "seconds"
      },
      "id": "29aec32a-94e3-4e3e-9447-e97990068452",
      "name": "intervalo",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [
        3744,
        352
      ],
      "webhookId": "2d248da5-8f1d-4d84-b7ae-18f49b80d075"
    },
    {
      "parameters": {
        "toolDescription": "Search for the tag, passing the name of the tag that will be searched",
        "url": "={{ $('variaveis').item.json[\"URL do Site\"] }}/wp-json/wp/v2/tags",
        "sendQuery": true,
        "parametersQuery": {
          "values": [
            {
              "name": "search",
              "valueProvider": "fieldValue",
              "value": "{tag_name}"
            }
          ]
        },
        "placeholderDefinitions": {
          "values": [
            {
              "name": "tag_name",
              "description": "Tag name",
              "type": "string"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        2448,
        720
      ],
      "id": "06b02383-c01a-4d48-858a-5da95663e9e1",
      "name": "search_tag"
    },
    {
      "parameters": {
        "content": "## Tag autom√°ticas",
        "height": 443,
        "width": 279,
        "color": 5
      },
      "id": "685bd00f-0113-42eb-b453-2e0442b5bc51",
      "name": "Sticky Note20",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2384,
        608
      ]
    },
    {
      "parameters": {
        "toolDescription": "Create the tag, passing the name of the tag that will be created",
        "method": "POST",
        "url": "={{ $('variaveis').item.json[\"URL do Site\"] }}/wp-json/wp/v2/tags",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "wordpressApi",
        "sendBody": true,
        "parametersBody": {
          "values": [
            {
              "name": "name"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        2512,
        896
      ],
      "id": "575d79fb-fa49-42e3-acbb-7a8857f25e1c",
      "name": "create_tags",
      "notesInFlow": true,
      "credentials": {
        "wordpressApi": {
          "id": "WpmUPc56IE4VL24s",
          "name": "Wordpress account NEWS"
        }
      },
      "notes": "Criar tags"
    },
    {
      "parameters": {
        "content": "### Delay entre subt√≠tulos",
        "height": 203,
        "width": 199,
        "color": 4
      },
      "id": "31575ff8-ecb1-4c2f-a932-9b737eb6a0e9",
      "name": "Sticky Note12",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3712,
        288
      ]
    },
    {
      "parameters": {
        "path": "enviapost",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        -128,
        448
      ],
      "id": "20ac0028-65fa-4e21-8199-5159edf19597",
      "name": "Webhook",
      "webhookId": "0237fe08-0b61-4e8c-9a52-adb544c6206d"
    }
  ],
  "connections": {
    "Ocorreu Erro": {
      "main": [
        [
          {
            "node": "variaveis_erro",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "variaveis_erro": {
      "main": [
        [
          {
            "node": "Google Sheets - Status ERRO",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "variaveis": {
      "main": [
        [
          {
            "node": "Ler Planilha",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ler Planilha": {
      "main": [
        [
          {
            "node": "Planilha com Status Executando",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mem√≥ria": {
      "ai_memory": [
        [
          {
            "node": "SEO",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Conte√∫do",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Pega informa√ß√µes": {
      "main": [
        [
          {
            "node": "redimensionar",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Imagem Overlay": {
      "main": [
        [
          {
            "node": "Aplicar marca dagua",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "redimensionar": {
      "main": [
        [
          {
            "node": "Pega informa√ß√µes redimensionada",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pega informa√ß√µes redimensionada": {
      "main": [
        [
          {
            "node": "logo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aplicar marca dagua": {
      "main": [
        [
          {
            "node": "Wordpress - Salvar imagem em m√≠dia",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Informa√ß√µes logo subtitulo": {
      "main": [
        [
          {
            "node": "Imagem Overlay",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "logo": {
      "main": [
        [
          {
            "node": "Informa√ß√µes logo subtitulo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wordpress - Salvar imagem em m√≠dia": {
      "main": [
        [
          {
            "node": "Wordpress - Atualizar Atributos da imagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wordpress - Atualizar Atributos da imagem": {
      "main": [
        [
          {
            "node": "Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Plugins de SEO": {
      "main": [
        [
          {
            "node": "Google Sheets - Status Publicado",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Combinar subt√≠tulos": {
      "main": [
        [
          {
            "node": "Wordpress - Publicar Post",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wordpress - Publicar Post": {
      "main": [
        [
          {
            "node": "Plugins de SEO",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Content": {
      "main": [
        [
          {
            "node": "Loop",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Planilha com Status Executando": {
      "main": [
        [
          {
            "node": "validacao",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "dados": {
      "main": [
        [
          {
            "node": "Prompts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Scraper Jina.ai": {
      "main": [
        [
          {
            "node": "Wordpress - Categorias",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Qual Scraper?": {
      "main": [
        [
          {
            "node": "Scrape.do",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Scraper Jina.ai",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Scrapper Firecrawl",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "A cada 15 min": {
      "main": [
        []
      ]
    },
    "Scrape.do": {
      "main": [
        [
          {
            "node": "Wordpress - Categorias",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Unsplash Download": {
      "main": [
        [
          {
            "node": "Pega informa√ß√µes",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Erro imagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Flux": {
      "main": [
        [
          {
            "node": "Pega informa√ß√µes",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Flux.1-schnell",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pexels": {
      "main": [
        [
          {
            "node": "Pexels - Download",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pixabay": {
      "main": [
        [
          {
            "node": "Pixabay - Download",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Unsplash": {
      "main": [
        [
          {
            "node": "Unsplash Download",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pixabay - Download": {
      "main": [
        [
          {
            "node": "Pega informa√ß√µes",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Erro imagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pexels - Download": {
      "main": [
        [
          {
            "node": "Pega informa√ß√µes",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Erro imagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Piwigo": {
      "main": [
        [
          {
            "node": "Piwigo - Download",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "URL image": {
      "main": [
        [
          {
            "node": "Pega informa√ß√µes",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Erro imagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Flux.1-schnell": {
      "main": [
        [
          {
            "node": "Pega informa√ß√µes",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Pollinations",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "imagem j√° foi gerada?": {
      "main": [
        [
          {
            "node": "Leonardo.AI - Baixar imagem",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Aguardar Leonardo.AI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Qual banco de imagem?1": {
      "main": [
        [
          {
            "node": "Piwigo",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Pexels",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Pixabay",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Unsplash",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "URL image",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Dall-e",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Pollinations",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Flux",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Leonard - Solicitar imagem",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Midjourney gerar prompt",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Freepik",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Scraper Jina.ai Reconhecimento/Fonte",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Scraper Jina.ai Reconhecimento/Fonte",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "validacao": {
      "main": [
        [
          {
            "node": "Qual Scraper?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prompts": {
      "main": [
        [
          {
            "node": "SEO",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "ai_languageModel": [
        [
          {
            "node": "SEO",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Auto-fixing Output Parser",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Extractor",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Extractor FAQ",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Conte√∫do",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Extrair imagem com ia",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "SEO": {
      "main": [
        [
          {
            "node": "Dados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Conte√∫do?": {
      "main": [
        [
          {
            "node": "Extractor",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extractor FAQ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Conte√∫do": {
      "main": [
        [
          {
            "node": "Conte√∫do?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Qual etapa?": {
      "main": [
        [
          {
            "node": "Qual banco de imagem?1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Conte√∫do",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Conte√∫do",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dados": {
      "main": [
        [
          {
            "node": "Separar Dados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SEO Json": {
      "ai_outputParser": [
        [
          {
            "node": "Auto-fixing Output Parser",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Loop": {
      "main": [
        [
          {
            "node": "intervalo",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Combinar subt√≠tulos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Separar Dados": {
      "main": [
        [
          {
            "node": "Loop",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extractor": {
      "main": [
        [
          {
            "node": "Imagem no subt√≠tulo?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Imagem no subt√≠tulo?": {
      "main": [
        [
          {
            "node": "Content",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Content",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Content",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Content",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Qual banco de imagem?1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Content",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Qual banco de imagem?1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Content",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Qual banco de imagem?1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extractor FAQ": {
      "main": [
        [
          {
            "node": "Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Piwigo - Download": {
      "main": [
        [
          {
            "node": "Pega informa√ß√µes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pollinations": {
      "main": [
        [
          {
            "node": "Pega informa√ß√µes",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Erro imagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Leonard - Solicitar imagem": {
      "main": [
        [
          {
            "node": "Aguardar Leonardo.AI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aguardar Leonardo.AI": {
      "main": [
        [
          {
            "node": "Leonardo.AI - Resultados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Leonardo.AI - Resultados": {
      "main": [
        [
          {
            "node": "imagem j√° foi gerada?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Leonardo.AI - Baixar imagem": {
      "main": [
        [
          {
            "node": "Pega informa√ß√µes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Freepik": {
      "main": [
        [
          {
            "node": "Base64 para Jpeg",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Base64 para Jpeg": {
      "main": [
        [
          {
            "node": "Pega informa√ß√µes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Scrapper Firecrawl": {
      "main": [
        [
          {
            "node": "Wordpress - Categorias",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Reconhece imagem e faz prompt": {
      "main": [
        [
          {
            "node": "Pollinations Reconhecimento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extrair imagem com ia": {
      "main": [
        [
          {
            "node": "Reconhecimento ou fonte?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download imagem em destaque": {
      "main": [
        [
          {
            "node": "Pega informa√ß√µes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Reconhecimento ou fonte?": {
      "main": [
        [
          {
            "node": "Reconhece imagem e faz prompt",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Download imagem em destaque",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Scraper Jina.ai Reconhecimento/Fonte": {
      "main": [
        [
          {
            "node": "HTML Reconhecimento/Fonte",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTML Reconhecimento/Fonte": {
      "main": [
        [
          {
            "node": "Tem imagem em destaque?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Tem imagem em destaque?": {
      "main": [
        [
          {
            "node": "Reconhecimento ou fonte?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extrair imagem com ia",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pollinations Reconhecimento": {
      "main": [
        [
          {
            "node": "Pega informa√ß√µes",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Erro imagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dall-e": {
      "main": [
        [
          {
            "node": "Pega informa√ß√µes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "imagem_gerada?": {
      "main": [
        [
          {
            "node": "midjourney_upscale",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "aguarde_geracao1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "midjourney_imagem": {
      "main": [
        [
          {
            "node": "imagem_gerada?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "aguarde_geracao1": {
      "main": [
        [
          {
            "node": "midjourney_imagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "midjourney_upscale": {
      "main": [
        [
          {
            "node": "aguarde_upscale1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "midjourney_resultados": {
      "main": [
        [
          {
            "node": "resultado_finalizado?1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "aguarde_upscale1": {
      "main": [
        [
          {
            "node": "midjourney_resultados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "resultado_finalizado?1": {
      "main": [
        [
          {
            "node": "Midjourney baixar imagem",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "aguarde_upscale1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Midjourney gerar prompt": {
      "main": [
        [
          {
            "node": "aguarde_geracao1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Midjourney baixar imagem": {
      "main": [
        [
          {
            "node": "Pega informa√ß√µes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Auto-fixing Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "SEO",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Categorias": {
      "main": [
        [
          {
            "node": "dados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wordpress - Categorias": {
      "main": [
        [
          {
            "node": "Categorias",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "intervalo": {
      "main": [
        [
          {
            "node": "Qual etapa?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "search_tag": {
      "ai_tool": [
        [
          {
            "node": "SEO",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "create_tags": {
      "ai_tool": [
        [
          {
            "node": "SEO",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "variaveis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:A cada 15 min": {
      "recurrenceRules": []
    }
  },
  "meta": null,
  "pinData": {},
  "versionId": "325b8f8d-519e-45b9-a904-e97a5635f8be",
  "triggerCount": 1,
  "shared": [
    {
      "createdAt": "2025-08-14T14:16:26.024Z",
      "updatedAt": "2025-08-14T14:16:26.024Z",
      "role": "workflow:owner",
      "workflowId": "vsSolT8LyupqD8zK",
      "projectId": "I3gAC3xI6nBnmwxf"
    }
  ],
  "tags": []
}